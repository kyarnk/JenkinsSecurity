{"version":"1.112.0","results":[{"check_id":"javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection","path":"/src/data/static/codefixes/dbSchemaChallenge_1.ts","start":{"line":5,"col":28,"offset":294},"end":{"line":5,"col":162,"offset":428},"extra":{"message":"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.","metadata":{"interfile":true,"references":["https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"],"category":"security","technology":["express"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection","shortlink":"https://sg.run/gjoe"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection","path":"/src/data/static/codefixes/dbSchemaChallenge_3.ts","start":{"line":11,"col":28,"offset":429},"end":{"line":11,"col":159,"offset":560},"extra":{"message":"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.","metadata":{"interfile":true,"references":["https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"],"category":"security","technology":["express"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection","shortlink":"https://sg.run/gjoe"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.audit.detect-replaceall-sanitization.detect-replaceall-sanitization","path":"/src/data/static/codefixes/restfulXssChallenge_2.ts","start":{"line":59,"col":34,"offset":2026},"end":{"line":59,"col":82,"offset":2074},"extra":{"message":"Detected a call to `replaceAll()` in an attempt to HTML escape the string `tableData[i].description`. Manually sanitizing input through a manually built list can be circumvented in many situations, and it's better to use a well known sanitization library such as `sanitize-html` or `DOMPurify`.","metadata":{"category":"security","technology":["javascript","typescript"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"references":["https://www.npmjs.com/package/dompurify","https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.audit.detect-replaceall-sanitization.detect-replaceall-sanitization","shortlink":"https://sg.run/AzoB"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.audit.detect-replaceall-sanitization.detect-replaceall-sanitization","path":"/src/data/static/codefixes/restfulXssChallenge_2.ts","start":{"line":59,"col":34,"offset":2026},"end":{"line":59,"col":106,"offset":2098},"extra":{"message":"Detected a call to `replaceAll()` in an attempt to HTML escape the string `tableData[i].description.replaceAll('<', '&lt;')`. Manually sanitizing input through a manually built list can be circumvented in many situations, and it's better to use a well known sanitization library such as `sanitize-html` or `DOMPurify`.","metadata":{"category":"security","technology":["javascript","typescript"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"references":["https://www.npmjs.com/package/dompurify","https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.audit.detect-replaceall-sanitization.detect-replaceall-sanitization","shortlink":"https://sg.run/AzoB"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection","path":"/src/data/static/codefixes/unionSqlInjectionChallenge_1.ts","start":{"line":6,"col":28,"offset":336},"end":{"line":6,"col":159,"offset":467},"extra":{"message":"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.","metadata":{"interfile":true,"references":["https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"],"category":"security","technology":["express"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection","shortlink":"https://sg.run/gjoe"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection","path":"/src/data/static/codefixes/unionSqlInjectionChallenge_3.ts","start":{"line":10,"col":28,"offset":468},"end":{"line":10,"col":159,"offset":599},"extra":{"message":"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.","metadata":{"interfile":true,"references":["https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"],"category":"security","technology":["express"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection","shortlink":"https://sg.run/gjoe"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.secrets.security.detected-generic-secret.detected-generic-secret","path":"/src/data/static/users.yml","start":{"line":150,"col":7,"offset":3500},"end":{"line":150,"col":47,"offset":3540},"extra":{"message":"Generic Secret detected","metadata":{"cwe":["CWE-798: Use of Hard-coded Credentials"],"source-rule-url":"https://github.com/dxa4481/truffleHogRegexes/blob/master/truffleHogRegexes/regexes.json","category":"security","technology":["secrets"],"confidence":"LOW","owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/generic.secrets.security.detected-generic-secret.detected-generic-secret","shortlink":"https://sg.run/l2o5"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/data/staticData.ts","start":{"line":7,"col":33,"offset":220},"end":{"line":7,"col":65,"offset":252},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.secrets.security.detected-jwt-token.detected-jwt-token","path":"/src/frontend/src/app/app.guard.spec.ts","start":{"line":40,"col":36,"offset":1366},"end":{"line":40,"col":148,"offset":1478},"extra":{"message":"JWT token detected","metadata":{"source-rule-url":"https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py","category":"security","technology":["secrets","jwt"],"confidence":"LOW","references":["https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"],"cwe":["CWE-321: Use of Hard-coded Cryptographic Key"],"owasp":["A02:2021 - Cryptographic Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token","shortlink":"https://sg.run/05N5"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.secrets.security.detected-jwt-token.detected-jwt-token","path":"/src/frontend/src/app/last-login-ip/last-login-ip.component.spec.ts","start":{"line":61,"col":36,"offset":2220},"end":{"line":61,"col":120,"offset":2304},"extra":{"message":"JWT token detected","metadata":{"source-rule-url":"https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py","category":"security","technology":["secrets","jwt"],"confidence":"LOW","references":["https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"],"cwe":["CWE-321: Use of Hard-coded Cryptographic Key"],"owasp":["A02:2021 - Cryptographic Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token","shortlink":"https://sg.run/05N5"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.secrets.security.detected-jwt-token.detected-jwt-token","path":"/src/frontend/src/app/last-login-ip/last-login-ip.component.spec.ts","start":{"line":67,"col":36,"offset":2661},"end":{"line":67,"col":89,"offset":2714},"extra":{"message":"JWT token detected","metadata":{"source-rule-url":"https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py","category":"security","technology":["secrets","jwt"],"confidence":"LOW","references":["https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"],"cwe":["CWE-321: Use of Hard-coded Cryptographic Key"],"owasp":["A02:2021 - Cryptographic Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token","shortlink":"https://sg.run/05N5"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop","path":"/src/frontend/src/hacking-instructor/helpers/helpers.ts","start":{"line":38,"col":9,"offset":1027},"end":{"line":38,"col":54,"offset":1072},"extra":{"message":"Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.","metadata":{"cwe":["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"],"category":"security","references":["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"],"technology":["typescript"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mass Assignment"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop","shortlink":"https://sg.run/w1DB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.browser.security.insecure-document-method.insecure-document-method","path":"/src/frontend/src/hacking-instructor/index.ts","start":{"line":113,"col":3,"offset":3696},"end":{"line":113,"col":43,"offset":3736},"extra":{"message":"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"category":"security","technology":["browser"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method","shortlink":"https://sg.run/LwA9"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"/src/frontend/src/index.html","start":{"line":14,"col":3,"offset":494},"end":{"line":14,"col":127,"offset":618},"extra":{"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"/src/frontend/src/index.html","start":{"line":15,"col":3,"offset":621},"end":{"line":15,"col":101,"offset":719},"extra":{"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"/src/frontend/src/index.html","start":{"line":16,"col":3,"offset":722},"end":{"line":16,"col":86,"offset":805},"extra":{"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/lib/codingChallenges.ts","start":{"line":24,"col":40,"offset":756},"end":{"line":24,"col":48,"offset":764},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/lib/codingChallenges.ts","start":{"line":24,"col":50,"offset":766},"end":{"line":24,"col":54,"offset":770},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","path":"/src/lib/codingChallenges.ts","start":{"line":76,"col":9,"offset":2975},"end":{"line":76,"col":67,"offset":3033},"extra":{"message":"RegExp() called with a `challengeKey` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.","metadata":{"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"cwe":["CWE-1333: Inefficient Regular Expression Complexity"],"references":["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"],"source-rule-url":"https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js","category":"security","technology":["javascript"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Denial-of-Service (DoS)"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","shortlink":"https://sg.run/gr65"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","path":"/src/lib/codingChallenges.ts","start":{"line":78,"col":16,"offset":3103},"end":{"line":78,"col":77,"offset":3164},"extra":{"message":"RegExp() called with a `challengeKey` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.","metadata":{"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"cwe":["CWE-1333: Inefficient Regular Expression Complexity"],"references":["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"],"source-rule-url":"https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js","category":"security","technology":["javascript"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Denial-of-Service (DoS)"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","shortlink":"https://sg.run/gr65"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.hardcoded-hmac-key.hardcoded-hmac-key","path":"/src/lib/insecurity.ts","start":{"line":44,"col":39,"offset":2327},"end":{"line":44,"col":94,"offset":2382},"extra":{"message":"Detected a hardcoded hmac key. Avoid hardcoding secrets and consider using an alternate option such as reading the secret from a config file or using an environment variable.","metadata":{"interfile":true,"category":"security","technology":["crypto","hmac"],"references":["https://rules.sonarsource.com/javascript/RSPEC-2068","https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html#key-management"],"owasp":["A07:2021 - Identification and Authentication Failures"],"cwe":["CWE-798: Use of Hard-coded Credentials"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.hardcoded-hmac-key.hardcoded-hmac-key","shortlink":"https://sg.run/K9bn"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret","path":"/src/lib/insecurity.ts","start":{"line":56,"col":56,"offset":2812},"end":{"line":56,"col":66,"offset":2822},"extra":{"message":"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).","metadata":{"cwe":["CWE-798: Use of Hard-coded Credentials"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"],"owasp":["A07:2021 - Identification and Authentication Failures"],"asvs":{"control_id":"3.5.2 Static API keys or secret","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v35-token-based-session-management","section":"V3: Session Management Verification Requirements","version":"4"},"category":"security","technology":["jwt","javascript","secrets"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret","shortlink":"https://sg.run/4xN9"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.hardcoded-hmac-key.hardcoded-hmac-key","path":"/src/lib/insecurity.ts","start":{"line":152,"col":16,"offset":6279},"end":{"line":152,"col":55,"offset":6318},"extra":{"message":"Detected a hardcoded hmac key. Avoid hardcoding secrets and consider using an alternate option such as reading the secret from a config file or using an environment variable.","metadata":{"interfile":true,"category":"security","technology":["crypto","hmac"],"references":["https://rules.sonarsource.com/javascript/RSPEC-2068","https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html#key-management"],"owasp":["A07:2021 - Identification and Authentication Failures"],"cwe":["CWE-798: Use of Hard-coded Credentials"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.hardcoded-hmac-key.hardcoded-hmac-key","shortlink":"https://sg.run/K9bn"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/lib/startup/restoreOverwrittenFilesWithOriginals.ts","start":{"line":28,"col":56,"offset":945},"end":{"line":28,"col":105,"offset":994},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/lib/startup/validatePreconditions.ts","start":{"line":121,"col":36,"offset":5118},"end":{"line":121,"col":61,"offset":5143},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-detect-notevil-usage.express-detect-notevil-usage","path":"/src/routes/b2bOrder.ts","start":{"line":22,"col":9,"offset":837},"end":{"line":22,"col":80,"offset":908},"extra":{"message":"Detected usage of the `notevil` package, which is unmaintained and has vulnerabilities. Using any sort of `eval()` functionality can be very dangerous, but if you must, the `eval` package is an up to date alternative. Be sure that only trusted input reaches an `eval()` function.","metadata":{"category":"security","references":["https://github.com/mmckegg/notevil"],"cwe":["CWE-1104: Use of Unmaintained Third Party Components"],"owasp":["A06:2021 - Vulnerable and Outdated Components"],"technology":["javascript","typescript"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-detect-notevil-usage.express-detect-notevil-usage","shortlink":"https://sg.run/W70E"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.browser.security.eval-detected.eval-detected","path":"/src/routes/captcha.ts","start":{"line":23,"col":20,"offset":912},"end":{"line":23,"col":36,"offset":928},"extra":{"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dynamic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing","section":"V5 Validation, Sanitization and Encoding","version":"4"},"category":"security","technology":["browser"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected","shortlink":"https://sg.run/7ope"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.injection.raw-html-format.raw-html-format","path":"/src/routes/chatbot.ts","start":{"line":198,"col":46,"offset":6146},"end":{"line":198,"col":56,"offset":6156},"extra":{"message":"User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.express.security.injection.raw-html-format.raw-html-format","shortlink":"https://sg.run/5DO3"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal","path":"/src/routes/dataErasure.ts","start":{"line":69,"col":45,"offset":2314},"end":{"line":69,"col":60,"offset":2329},"extra":{"message":"Possible writing outside of the destination, make sure that the target path is nested in the intended destination","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["express","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal","shortlink":"https://sg.run/weRn"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/routes/dataErasure.ts","start":{"line":69,"col":45,"offset":2314},"end":{"line":69,"col":60,"offset":2329},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-res-sendfile.express-res-sendfile","path":"/src/routes/fileServer.ts","start":{"line":33,"col":20,"offset":1154},"end":{"line":33,"col":46,"offset":1180},"extra":{"message":"The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.","metadata":{"references":["https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"],"technology":["express"],"category":"security","cwe":["CWE-73: External Control of File Name or Path"],"owasp":["A04:2021 - Insecure Design"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-res-sendfile.express-res-sendfile","shortlink":"https://sg.run/7DJk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/routes/fileServer.ts","start":{"line":33,"col":41,"offset":1175},"end":{"line":33,"col":45,"offset":1179},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/routes/fileUpload.ts","start":{"line":32,"col":47,"offset":1119},"end":{"line":32,"col":55,"offset":1127},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/routes/fileUpload.ts","start":{"line":42,"col":51,"offset":1591},"end":{"line":42,"col":83,"offset":1623},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-libxml-vm-noent.express-libxml-vm-noent","path":"/src/routes/fileUpload.ts","start":{"line":83,"col":24,"offset":3365},"end":{"line":83,"col":140,"offset":3481},"extra":{"message":"Detected use of parseXml() function with the `noent` field set to `true`. This can lead to an XML External Entities (XXE) attack if untrusted data is passed into it.","metadata":{"references":["https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html"],"owasp":["A04:2017 - XML External Entities (XXE)","A05:2021 - Security Misconfiguration"],"cwe":["CWE-611: Improper Restriction of XML External Entity Reference"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["XML Injection"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-libxml-vm-noent.express-libxml-vm-noent","shortlink":"https://sg.run/n8Ag"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-res-sendfile.express-res-sendfile","path":"/src/routes/keyServer.ts","start":{"line":14,"col":20,"offset":421},"end":{"line":14,"col":57,"offset":458},"extra":{"message":"The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.","metadata":{"references":["https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"],"technology":["express"],"category":"security","cwe":["CWE-73: External Control of File Name or Path"],"owasp":["A04:2021 - Insecure Design"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-res-sendfile.express-res-sendfile","shortlink":"https://sg.run/7DJk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal","path":"/src/routes/keyServer.ts","start":{"line":14,"col":52,"offset":453},"end":{"line":14,"col":56,"offset":457},"extra":{"message":"Possible writing outside of the destination, make sure that the target path is nested in the intended destination","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["express","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal","shortlink":"https://sg.run/weRn"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/routes/keyServer.ts","start":{"line":14,"col":52,"offset":453},"end":{"line":14,"col":56,"offset":457},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-res-sendfile.express-res-sendfile","path":"/src/routes/logfileServer.ts","start":{"line":14,"col":20,"offset":421},"end":{"line":14,"col":47,"offset":448},"extra":{"message":"The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.","metadata":{"references":["https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"],"technology":["express"],"category":"security","cwe":["CWE-73: External Control of File Name or Path"],"owasp":["A04:2021 - Insecure Design"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-res-sendfile.express-res-sendfile","shortlink":"https://sg.run/7DJk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal","path":"/src/routes/logfileServer.ts","start":{"line":14,"col":42,"offset":443},"end":{"line":14,"col":46,"offset":447},"extra":{"message":"Possible writing outside of the destination, make sure that the target path is nested in the intended destination","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["express","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal","shortlink":"https://sg.run/weRn"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/routes/logfileServer.ts","start":{"line":14,"col":42,"offset":443},"end":{"line":14,"col":46,"offset":447},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection","path":"/src/routes/login.ts","start":{"line":36,"col":28,"offset":1514},"end":{"line":36,"col":169,"offset":1655},"extra":{"message":"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.","metadata":{"interfile":true,"references":["https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"],"category":"security","technology":["express"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection","shortlink":"https://sg.run/gjoe"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/routes/order.ts","start":{"line":45,"col":78,"offset":1762},"end":{"line":45,"col":85,"offset":1769},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-ssrf.express-ssrf","path":"/src/routes/profileImageUrlUpload.ts","start":{"line":23,"col":16,"offset":881},"end":{"line":23,"col":19,"offset":884},"extra":{"message":"The following request request.get() was found to be crafted from user-input `req` which can lead to Server-Side Request Forgery (SSRF) vulnerabilities. It is recommended where possible to not allow user-input to craft the base request, but to be treated as part of the path or query parameter. When user-input is necessary to craft the request, it is recommeneded to follow OWASP best practices to prevent abuse. ","metadata":{"references":["https://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet.html"],"cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"technology":["express"],"category":"security","owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-ssrf.express-ssrf","shortlink":"https://sg.run/0PNw"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-res-sendfile.express-res-sendfile","path":"/src/routes/quarantineServer.ts","start":{"line":14,"col":20,"offset":435},"end":{"line":14,"col":57,"offset":472},"extra":{"message":"The application processes user-input, this is passed to res.sendFile which can allow an attacker to arbitrarily read files on the system through path traversal. It is recommended to perform input validation in addition to canonicalizing the path. This allows you to validate the path against the intended directory it should be accessing.","metadata":{"references":["https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html"],"technology":["express"],"category":"security","cwe":["CWE-73: External Control of File Name or Path"],"owasp":["A04:2021 - Insecure Design"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-res-sendfile.express-res-sendfile","shortlink":"https://sg.run/7DJk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal","path":"/src/routes/quarantineServer.ts","start":{"line":14,"col":52,"offset":467},"end":{"line":14,"col":56,"offset":471},"extra":{"message":"Possible writing outside of the destination, make sure that the target path is nested in the intended destination","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["express","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal","shortlink":"https://sg.run/weRn"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/src/routes/quarantineServer.ts","start":{"line":14,"col":52,"offset":467},"end":{"line":14,"col":56,"offset":471},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-open-redirect.express-open-redirect","path":"/src/routes/redirect.ts","start":{"line":19,"col":20,"offset":1057},"end":{"line":19,"col":25,"offset":1062},"extra":{"message":"The application redirects to a URL specified by user-supplied input `query` that is not validated. This could redirect users to malicious locations. Consider using an allow-list approach to validate URLs, or warn users they are being redirected to a third-party website.","metadata":{"technology":["express"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html"],"cwe":["CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"],"category":"security","owasp":["A01:2021 - Broken Access Control"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Open Redirect"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-open-redirect.express-open-redirect","shortlink":"https://sg.run/EpoP"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection","path":"/src/routes/search.ts","start":{"line":23,"col":28,"offset":857},"end":{"line":23,"col":159,"offset":988},"extra":{"message":"Detected a sequelize statement that is tainted by user-input. This could lead to SQL injection if the variable is user-controlled and is not properly sanitized. In order to prevent SQL injection, it is recommended to use parameterized queries or prepared statements.","metadata":{"interfile":true,"references":["https://sequelize.org/docs/v6/core-concepts/raw-queries/#replacements"],"category":"security","technology":["express"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/javascript.sequelize.security.audit.sequelize-injection-express.express-sequelize-injection","shortlink":"https://sg.run/gjoe"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.browser.security.eval-detected.eval-detected","path":"/src/routes/userProfile.ts","start":{"line":36,"col":26,"offset":1501},"end":{"line":36,"col":36,"offset":1511},"extra":{"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dynamic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing","section":"V5 Validation, Sanitization and Encoding","version":"4"},"category":"security","technology":["browser"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected","shortlink":"https://sg.run/7ope"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.express-insecure-template-usage.express-insecure-template-usage","path":"/src/routes/userProfile.ts","start":{"line":56,"col":22,"offset":2595},"end":{"line":56,"col":43,"offset":2616},"extra":{"message":"User data from `req` is being compiled into the template, which can lead to a Server Side Template Injection (SSTI) vulnerability.","metadata":{"interfile":true,"category":"security","cwe":["CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine"],"owasp":["A03:2021 - Injection","A01:2017 - Injection"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Injection_Prevention_Cheat_Sheet.html"],"technology":["javascript","typescript","express","pug","jade","dot","ejs","nunjucks","lodash","handlbars","mustache","hogan.js","eta","squirrelly"],"source_rule_url":["https://github.com/github/codeql/blob/2ba2642c7ab29b9eedef33bcc2b8cd1d203d0c10/javascript/ql/test/query-tests/Security/CWE-094/CodeInjection/template-sinks.js"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/javascript.express.security.express-insecure-template-usage.express-insecure-template-usage","shortlink":"https://sg.run/b49v"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag","path":"/src/routes/videoHandler.ts","start":{"line":57,"col":90,"offset":1897},"end":{"line":57,"col":94,"offset":1901},"extra":{"message":"Cannot determine what 'subs' is and it is used with a '<script>' tag. This could be susceptible to cross-site scripting (XSS). Ensure 'subs' is not externally controlled, or sanitize this data.","metadata":{"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"references":["https://www.developsec.com/2017/11/09/xss-in-a-script-tag/","https://github.com/juice-shop/juice-shop/blob/1ceb8751e986dacd3214a618c37e7411be6bc11a/routes/videoHandler.ts#L68"],"category":"security","technology":["javascript"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag","shortlink":"https://sg.run/1Zy1"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag","path":"/src/routes/videoHandler.ts","start":{"line":69,"col":165,"offset":2743},"end":{"line":69,"col":169,"offset":2747},"extra":{"message":"Cannot determine what 'subs' is and it is used with a '<script>' tag. This could be susceptible to cross-site scripting (XSS). Ensure 'subs' is not externally controlled, or sanitize this data.","metadata":{"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"references":["https://www.developsec.com/2017/11/09/xss-in-a-script-tag/","https://github.com/juice-shop/juice-shop/blob/1ceb8751e986dacd3214a618c37e7411be6bc11a/routes/videoHandler.ts#L68"],"category":"security","technology":["javascript"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag","shortlink":"https://sg.run/1Zy1"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","path":"/src/server.ts","start":{"line":106,"col":7,"offset":4890},"end":{"line":106,"col":22,"offset":4905},"extra":{"message":"A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.","metadata":{"category":"security","references":["https://www.npmjs.com/package/csurf","https://www.npmjs.com/package/csrf","https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"],"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"technology":["javascript","typescript","express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage","shortlink":"https://sg.run/BxzR"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/src/server.ts","start":{"line":149,"col":21,"offset":6753},"end":{"line":149,"col":63,"offset":6795},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing","path":"/src/server.ts","start":{"line":261,"col":3,"offset":11388},"end":{"line":261,"col":76,"offset":11461},"extra":{"message":"Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource.","metadata":{"interfile":true,"cwe":["CWE-548: Exposure of Information Through Directory Listing"],"owasp":["A06:2017 - Security Misconfiguration","A01:2021 - Broken Access Control"],"category":"security","technology":["express"],"references":["https://www.npmjs.com/package/serve-index","https://www.acunetix.com/blog/articles/directory-listing-information-disclosure/"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing","shortlink":"https://sg.run/DX2G"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing","path":"/src/server.ts","start":{"line":265,"col":3,"offset":11747},"end":{"line":265,"col":109,"offset":11853},"extra":{"message":"Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource.","metadata":{"interfile":true,"cwe":["CWE-548: Exposure of Information Through Directory Listing"],"owasp":["A06:2017 - Security Misconfiguration","A01:2021 - Broken Access Control"],"category":"security","technology":["express"],"references":["https://www.npmjs.com/package/serve-index","https://www.acunetix.com/blog/articles/directory-listing-information-disclosure/"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing","shortlink":"https://sg.run/DX2G"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing","path":"/src/server.ts","start":{"line":269,"col":3,"offset":11957},"end":{"line":269,"col":115,"offset":12069},"extra":{"message":"Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource.","metadata":{"interfile":true,"cwe":["CWE-548: Exposure of Information Through Directory Listing"],"owasp":["A06:2017 - Security Misconfiguration","A01:2021 - Broken Access Control"],"category":"security","technology":["express"],"references":["https://www.npmjs.com/package/serve-index","https://www.acunetix.com/blog/articles/directory-listing-information-disclosure/"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing","shortlink":"https://sg.run/DX2G"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing","path":"/src/server.ts","start":{"line":273,"col":3,"offset":12217},"end":{"line":273,"col":103,"offset":12317},"extra":{"message":"Directory listing/indexing is enabled, which may lead to disclosure of sensitive directories and files. It is recommended to disable directory listing unless it is a public resource. If you need directory listing, ensure that sensitive files are inaccessible when querying the resource.","metadata":{"interfile":true,"cwe":["CWE-548: Exposure of Information Through Directory Listing"],"owasp":["A06:2017 - Security Misconfiguration","A01:2021 - Broken Access Control"],"category":"security","technology":["express"],"references":["https://www.npmjs.com/package/serve-index","https://www.acunetix.com/blog/articles/directory-listing-information-disclosure/"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mishandled Sensitive Information"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-check-directory-listing.express-check-directory-listing","shortlink":"https://sg.run/DX2G"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.xss.pug.explicit-unescape.template-explicit-unescape","path":"/src/views/promotionVideo.pug","start":{"line":79,"col":13,"offset":3942},"end":{"line":79,"col":40,"offset":3969},"extra":{"message":"Detected an explicit unescape in a Pug template, using either '!=' or '!{...}'. If external data can reach these locations, your application is exposed to a cross-site scripting (XSS) vulnerability. If you must do this, ensure no external data can reach this location.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://pugjs.org/language/code.html#unescaped-buffered-code","https://pugjs.org/language/attributes.html#unescaped-attributes"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.express.security.audit.xss.pug.explicit-unescape.template-explicit-unescape","shortlink":"https://sg.run/3xbe"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/data/static/codefixes/weakPasswordChallenge_4.ts","start":{"line":1,"col":1,"offset":0},"end":{"line":8,"col":9,"offset":280}}]],"message":"Syntax error at line /src/data/static/codefixes/weakPasswordChallenge_4.ts:1:\n `User.init(\n      password: {\n        type: DataTypes.STRING,\n        set (clearTextPassword: string) {\n          validatePasswordIsNotInTopOneMillionCommonPasswordsList(clearTextPassword)\n          this.setDataValue('password', security.hash(clearTextPassword))\n        }\n      },` was unexpected","path":"/src/data/static/codefixes/weakPasswordChallenge_4.ts","spans":[{"file":"/src/data/static/codefixes/weakPasswordChallenge_4.ts","start":{"line":1,"col":1,"offset":0},"end":{"line":8,"col":9,"offset":280}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/data/static/codefixes/weakPasswordChallenge_1_correct.ts","start":{"line":1,"col":1,"offset":0},"end":{"line":9,"col":9,"offset":343}}]],"message":"Syntax error at line /src/data/static/codefixes/weakPasswordChallenge_1_correct.ts:1:\n `User.init(\n      password: {\n        type: DataTypes.STRING,\n        set (clearTextPassword: string) {\n          validatePasswordHasAtLeastTenChar(clearTextPassword)\n          validatePasswordIsNotInTopOneMillionCommonPasswordsList(clearTextPassword)\n          this.setDataValue('password', security.hash(clearTextPassword))\n        }\n      },` was unexpected","path":"/src/data/static/codefixes/weakPasswordChallenge_1_correct.ts","spans":[{"file":"/src/data/static/codefixes/weakPasswordChallenge_1_correct.ts","start":{"line":1,"col":1,"offset":0},"end":{"line":9,"col":9,"offset":343}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/data/static/codefixes/weakPasswordChallenge_3.ts","start":{"line":1,"col":1,"offset":0},"end":{"line":12,"col":9,"offset":537}}]],"message":"Syntax error at line /src/data/static/codefixes/weakPasswordChallenge_3.ts:1:\n `User.init(\n      password: {\n        type: DataTypes.STRING,\n        set (clearTextPassword: string) {\n          validatePasswordHasAtLeastOneNumber(clearTextPassword)\n          validatePasswordHasAtLeastOneSpecialChar(clearTextPassword)\n          validatePasswordHasAtLeastOneUpperCaseChar(clearTextPassword)\n          validatePasswordHasAtLeastOneLowerCaseChar(clearTextPassword)\n          validatePasswordHasAtLeastTenChar(clearTextPassword)\n          this.setDataValue('password', security.hash(clearTextPassword))\n        }\n      },` was unexpected","path":"/src/data/static/codefixes/weakPasswordChallenge_3.ts","spans":[{"file":"/src/data/static/codefixes/weakPasswordChallenge_3.ts","start":{"line":1,"col":1,"offset":0},"end":{"line":12,"col":9,"offset":537}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/registerAdminChallenge_4.ts:1:\n `/* Generated API endpoints */\n  finale.initialize({ app, sequelize })\n\n  const autoModels = [\n    { name: 'User', exclude: ['password', 'totpSecret', 'role'], model: UserModel },\n    { name: 'Product', exclude: [], model: ProductModel },\n    { name: 'Feedback', exclude: [], model: FeedbackModel },\n    { name: 'BasketItem', exclude: [], model: BasketItemModel },\n    { name: 'Challenge', exclude: [], model: ChallengeModel },\n    { name: 'Complaint', exclude: [], model: ComplaintModel },\n    { name: 'Recycle', exclude: [], model: RecycleModel },\n    { name: 'SecurityQuestion', exclude: [], model: SecurityQuestionModel },\n    { name: 'SecurityAnswer', exclude: [], model: SecurityAnswerModel },\n    { name: 'Address', exclude: [], model: AddressModel },\n    { name: 'PrivacyRequest', exclude: [], model: PrivacyRequestModel },\n    { name: 'Card', exclude: [], model: CardModel },\n    { name: 'Quantity', exclude: [], model: QuantityModel }\n  ]\n\n  for (const { name, exclude, model } of autoModels) {\n    const resource = finale.resource({\n      model,\n      endpoints: [`/api/${name}s`, `/api/${name}s/:id`],\n      excludeAttributes: exclude,\n      pagination: false\n    })\n\n    // create a wallet when a new user is registered using API\n    if (name === 'User') {\n      resource.create.send.before((req: Request, res: Response, context: { instance: { id: any }, continue: any }) => {\n        WalletModel.create({ UserId: context.instance.id }).catch((err: unknown) => {\n          console.log(err)\n        })\n        return context.continue\n      })\n    }` was unexpected","path":"/src/data/static/codefixes/registerAdminChallenge_4.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/loginBenderChallenge_4.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: models.User, plain: false })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected","path":"/src/data/static/codefixes/loginBenderChallenge_4.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/loginAdminChallenge_4_correct.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = $1 AND password = $2 AND deletedAt IS NULL`,\n      { bind: [ req.body.email, security.hash(req.body.password) ], model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected","path":"/src/data/static/codefixes/loginAdminChallenge_4_correct.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/loginAdminChallenge_2.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = $1 AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`,\n      { bind: [ req.body.email ], model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected","path":"/src/data/static/codefixes/loginAdminChallenge_2.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/registerAdminChallenge_3_correct.ts:1:\n `/* Generated API endpoints */\n  finale.initialize({ app, sequelize })\n\n  const autoModels = [\n    { name: 'User', exclude: ['password', 'totpSecret'], model: UserModel },\n    { name: 'Product', exclude: [], model: ProductModel },\n    { name: 'Feedback', exclude: [], model: FeedbackModel },\n    { name: 'BasketItem', exclude: [], model: BasketItemModel },\n    { name: 'Challenge', exclude: [], model: ChallengeModel },\n    { name: 'Complaint', exclude: [], model: ComplaintModel },\n    { name: 'Recycle', exclude: [], model: RecycleModel },\n    { name: 'SecurityQuestion', exclude: [], model: SecurityQuestionModel },\n    { name: 'SecurityAnswer', exclude: [], model: SecurityAnswerModel },\n    { name: 'Address', exclude: [], model: AddressModel },\n    { name: 'PrivacyRequest', exclude: [], model: PrivacyRequestModel },\n    { name: 'Card', exclude: [], model: CardModel },\n    { name: 'Quantity', exclude: [], model: QuantityModel }\n  ]\n\n  for (const { name, exclude, model } of autoModels) {\n    const resource = finale.resource({\n      model,\n      endpoints: [`/api/${name}s`, `/api/${name}s/:id`],\n      excludeAttributes: exclude,\n      pagination: false\n    })\n\n    // create a wallet when a new user is registered using API\n    if (name === 'User') {\n      resource.create.send.before((req: Request, res: Response, context: { instance: { id: any }, continue: any }) => {\n        WalletModel.create({ UserId: context.instance.id }).catch((err: unknown) => {\n          console.log(err)\n        })\n        context.instance.role = 'customer'\n        return context.continue\n      })\n    }` was unexpected","path":"/src/data/static/codefixes/registerAdminChallenge_3_correct.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/loginBenderChallenge_2_correct.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = $mail AND password = $pass AND deletedAt IS NULL`,\n      { bind: { mail: req.body.email, pass: security.hash(req.body.password) }, model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected","path":"/src/data/static/codefixes/loginBenderChallenge_2_correct.ts"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/data/static/codefixes/tokenSaleChallenge_1.ts","start":{"line":18,"col":1,"offset":0},"end":{"line":18,"col":2,"offset":1}}]],"message":"Syntax error at line /src/data/static/codefixes/tokenSaleChallenge_1.ts:18:\n `]` was unexpected","path":"/src/data/static/codefixes/tokenSaleChallenge_1.ts","spans":[{"file":"/src/data/static/codefixes/tokenSaleChallenge_1.ts","start":{"line":18,"col":1,"offset":0},"end":{"line":18,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/data/static/codefixes/restfulXssChallenge_3.ts","start":{"line":43,"col":37,"offset":0},"end":{"line":43,"col":44,"offset":7}}]],"message":"Syntax error at line /src/data/static/codefixes/restfulXssChallenge_3.ts:43:\n `: any[]` was unexpected","path":"/src/data/static/codefixes/restfulXssChallenge_3.ts","spans":[{"file":"/src/data/static/codefixes/restfulXssChallenge_3.ts","start":{"line":43,"col":37,"offset":0},"end":{"line":43,"col":44,"offset":7}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/loginJimChallenge_4.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (req.body.email.match(/.*['-;].*/) || req.body.password.match(/.*['-;].*/)) {\n      res.status(451).send(res.__('SQL Injection detected.'))\n    }\n    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected","path":"/src/data/static/codefixes/loginJimChallenge_4.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/loginBenderChallenge_1.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (req.body.email.match(/.*['-;].*/) || req.body.password.match(/.*['-;].*/)) {\n      res.status(451).send(res.__('SQL Injection detected.'))\n    }\n    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected","path":"/src/data/static/codefixes/loginBenderChallenge_1.ts"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/frontend/src/app/privacy-policy/privacy-policy.component.html","start":{"line":58,"col":25,"offset":0},"end":{"line":58,"col":39,"offset":14}}]],"message":"Syntax error at line /src/frontend/src/app/privacy-policy/privacy-policy.component.html:58:\n `& Cookies Data` was unexpected","path":"/src/frontend/src/app/privacy-policy/privacy-policy.component.html","spans":[{"file":"/src/frontend/src/app/privacy-policy/privacy-policy.component.html","start":{"line":58,"col":25,"offset":0},"end":{"line":58,"col":39,"offset":14}}]},{"code":2,"level":"warn","type":"Timeout","rule_id":"javascript.express.security.injection.raw-html-format.raw-html-format","message":"Timeout when running javascript.express.security.injection.raw-html-format.raw-html-format on /src/frontend/src/assets/private/three.js:\n ","path":"/src/frontend/src/assets/private/three.js"},{"code":2,"level":"warn","type":"Timeout","rule_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","message":"Timeout when running javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal on /src/frontend/src/assets/private/three.js:\n ","path":"/src/frontend/src/assets/private/three.js"},{"code":2,"level":"warn","type":"Timeout","rule_id":"javascript.lang.security.detect-eval-with-expression.detect-eval-with-expression","message":"Timeout when running javascript.lang.security.detect-eval-with-expression.detect-eval-with-expression on /src/frontend/src/assets/private/three.js:\n ","path":"/src/frontend/src/assets/private/three.js"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/data/static/codefixes/weakPasswordChallenge_2.ts","start":{"line":1,"col":1,"offset":0},"end":{"line":13,"col":9,"offset":622}}]],"message":"Syntax error at line /src/data/static/codefixes/weakPasswordChallenge_2.ts:1:\n `User.init(\n      password: {\n        type: DataTypes.STRING,\n        set (clearTextPassword: string) {\n          validatePasswordHasAtLeastOneNumber(clearTextPassword)\n          validatePasswordHasAtLeastOneSpecialChar(clearTextPassword)\n          validatePasswordHasAtLeastOneUpperCaseChar(clearTextPassword)\n          validatePasswordHasAtLeastOneLowerCaseChar(clearTextPassword)\n          validatePasswordHasAtLeastTenChar(clearTextPassword)\n          validatePasswordIsNotInTopOneMillionCommonPasswordsList(clearTextPassword)\n          this.setDataValue('password', security.hash(clearTextPassword))\n        }\n      },` was unexpected","path":"/src/data/static/codefixes/weakPasswordChallenge_2.ts","spans":[{"file":"/src/data/static/codefixes/weakPasswordChallenge_2.ts","start":{"line":1,"col":1,"offset":0},"end":{"line":13,"col":9,"offset":622}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/data/static/codefixes/tokenSaleChallenge_3_correct.ts","start":{"line":14,"col":1,"offset":0},"end":{"line":14,"col":2,"offset":1}}]],"message":"Syntax error at line /src/data/static/codefixes/tokenSaleChallenge_3_correct.ts:14:\n `]` was unexpected","path":"/src/data/static/codefixes/tokenSaleChallenge_3_correct.ts","spans":[{"file":"/src/data/static/codefixes/tokenSaleChallenge_3_correct.ts","start":{"line":14,"col":1,"offset":0},"end":{"line":14,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/registerAdminChallenge_2.ts:1:\n `/* Generated API endpoints */\n  finale.initialize({ app, sequelize })\n\n  const autoModels = [\n    { name: 'Product', exclude: [], model: ProductModel },\n    { name: 'Feedback', exclude: [], model: FeedbackModel },\n    { name: 'BasketItem', exclude: [], model: BasketItemModel },\n    { name: 'Challenge', exclude: [], model: ChallengeModel },\n    { name: 'Complaint', exclude: [], model: ComplaintModel },\n    { name: 'Recycle', exclude: [], model: RecycleModel },\n    { name: 'SecurityQuestion', exclude: [], model: SecurityQuestionModel },\n    { name: 'SecurityAnswer', exclude: [], model: SecurityAnswerModel },\n    { name: 'Address', exclude: [], model: AddressModel },\n    { name: 'PrivacyRequest', exclude: [], model: PrivacyRequestModel },\n    { name: 'Card', exclude: [], model: CardModel },\n    { name: 'Quantity', exclude: [], model: QuantityModel }\n  ]\n\n  for (const { name, exclude, model } of autoModels) {\n    const resource = finale.resource({\n      model,\n      endpoints: [`/api/${name}s`, `/api/${name}s/:id`],\n      excludeAttributes: exclude,\n      pagination: false\n    })` was unexpected","path":"/src/data/static/codefixes/registerAdminChallenge_2.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/loginAdminChallenge_3.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = $1 AND password = $2 AND deletedAt IS NULL`,\n      { bind: [ req.body.email, req.body.password ], model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected","path":"/src/data/static/codefixes/loginAdminChallenge_3.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/loginJimChallenge_3.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = ? AND password = ? AND deletedAt IS NULL`,\n      { replacements: [ req.body.email, req.body.password ], model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected","path":"/src/data/static/codefixes/loginJimChallenge_3.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/loginJimChallenge_2.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: models.User, plain: false })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected","path":"/src/data/static/codefixes/loginJimChallenge_2.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/loginJimChallenge_1_correct.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = $1 AND password = $2 AND deletedAt IS NULL`,\n      { bind: [ req.body.email, security.hash(req.body.password) ], model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected","path":"/src/data/static/codefixes/loginJimChallenge_1_correct.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/loginBenderChallenge_3.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    models.sequelize.query(`SELECT * FROM Users WHERE email = :mail AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`,\n      { replacements: { mail: req.body.email }, model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected","path":"/src/data/static/codefixes/loginBenderChallenge_3.ts"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/registerAdminChallenge_1.ts:1:\n `/* Generated API endpoints */\n  finale.initialize({ app, sequelize })\n\n  const autoModels = [\n    { name: 'User', exclude: ['password', 'totpSecret'], model: UserModel },\n    { name: 'Product', exclude: [], model: ProductModel },\n    { name: 'Feedback', exclude: [], model: FeedbackModel },\n    { name: 'BasketItem', exclude: [], model: BasketItemModel },\n    { name: 'Challenge', exclude: [], model: ChallengeModel },\n    { name: 'Complaint', exclude: [], model: ComplaintModel },\n    { name: 'Recycle', exclude: [], model: RecycleModel },\n    { name: 'SecurityQuestion', exclude: [], model: SecurityQuestionModel },\n    { name: 'SecurityAnswer', exclude: [], model: SecurityAnswerModel },\n    { name: 'Address', exclude: [], model: AddressModel },\n    { name: 'PrivacyRequest', exclude: [], model: PrivacyRequestModel },\n    { name: 'Card', exclude: [], model: CardModel },\n    { name: 'Quantity', exclude: [], model: QuantityModel }\n  ]\n\n  for (const { name, exclude, model } of autoModels) {\n    const resource = finale.resource({\n      model,\n      endpoints: [`/api/${name}s`, `/api/${name}s/:id`],\n      excludeAttributes: exclude,\n      pagination: false\n    })\n\n    // create a wallet when a new user is registered using API\n    if (name === 'User') {\n      resource.create.send.before((req: Request, res: Response, context: { instance: { id: any }, continue: any }) => {\n        WalletModel.create({ UserId: context.instance.id }).catch((err: unknown) => {\n          console.log(err)\n        })\n        context.instance.role = context.instance.role ? context.instance.role : 'customer'\n        return context.continue\n      })\n    }` was unexpected","path":"/src/data/static/codefixes/registerAdminChallenge_1.ts"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/data/static/codefixes/tokenSaleChallenge_2.ts","start":{"line":19,"col":1,"offset":0},"end":{"line":19,"col":2,"offset":1}}]],"message":"Syntax error at line /src/data/static/codefixes/tokenSaleChallenge_2.ts:19:\n `]` was unexpected","path":"/src/data/static/codefixes/tokenSaleChallenge_2.ts","spans":[{"file":"/src/data/static/codefixes/tokenSaleChallenge_2.ts","start":{"line":19,"col":1,"offset":0},"end":{"line":19,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/data/static/codefixes/loginAdminChallenge_1.ts:1:\n `import {BasketModel} from \"../../../models/basket\";\n\nmodule.exports = function login () {\n  function afterLogin (user: { data: User, bid: number }, res: Response, next: NextFunction) {\n    BasketModel.findOrCreate({ where: { UserId: user.data.id } })\n      .then(([basket]: [BasketModel, boolean]) => {\n        const token = security.authorize(user)\n        user.bid = basket.id // keep track of original basket\n        security.authenticatedUsers.put(token, user)\n        res.json({ authentication: { token, bid: basket.id, umail: user.data.email } })\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }\n\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (req.body.email.match(/.*['-;].*/) || req.body.password.match(/.*['-;].*/)) {\n      res.status(451).send(res.__('SQL Injection detected.'))\n    }\n    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: models.User, plain: true })\n      .then((authenticatedUser) => {\n        const user = utils.queryResultToJson(authenticatedUser)\n        if (user.data?.id && user.data.totpSecret !== '') {\n          res.status(401).json({\n            status: 'totp_token_required',\n            data: {\n              tmpToken: security.authorize({\n                userId: user.data.id,\n                type: 'password_valid_needs_second_factor_token'\n              })\n            }\n          })\n        } else if (user.data?.id) {\n          afterLogin(user, res, next)\n        } else {\n          res.status(401).send(res.__('Invalid email or password.'))\n        }\n      }).catch((error: Error) => {\n        next(error)\n      })\n  }` was unexpected","path":"/src/data/static/codefixes/loginAdminChallenge_1.ts"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/data/static/codefixes/restfulXssChallenge_4.ts","start":{"line":57,"col":37,"offset":0},"end":{"line":57,"col":44,"offset":7}}]],"message":"Syntax error at line /src/data/static/codefixes/restfulXssChallenge_4.ts:57:\n `: any[]` was unexpected","path":"/src/data/static/codefixes/restfulXssChallenge_4.ts","spans":[{"file":"/src/data/static/codefixes/restfulXssChallenge_4.ts","start":{"line":57,"col":37,"offset":0},"end":{"line":57,"col":44,"offset":7}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/data/static/codefixes/restfulXssChallenge_2.ts","start":{"line":57,"col":38,"offset":0},"end":{"line":57,"col":45,"offset":7}}]],"message":"Syntax error at line /src/data/static/codefixes/restfulXssChallenge_2.ts:57:\n `: any[]` was unexpected","path":"/src/data/static/codefixes/restfulXssChallenge_2.ts","spans":[{"file":"/src/data/static/codefixes/restfulXssChallenge_2.ts","start":{"line":57,"col":38,"offset":0},"end":{"line":57,"col":45,"offset":7}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/frontend/src/app/Services/user.service.ts","start":{"line":14,"col":3,"offset":0},"end":{"line":14,"col":8,"offset":5}}]],"message":"Syntax error at line /src/frontend/src/app/Services/user.service.ts:14:\n `new?:` was unexpected","path":"/src/frontend/src/app/Services/user.service.ts","spans":[{"file":"/src/frontend/src/app/Services/user.service.ts","start":{"line":14,"col":3,"offset":0},"end":{"line":14,"col":8,"offset":5}}]}],"paths":{"scanned":["/src/CODE_OF_CONDUCT.md","/src/CONTRIBUTING.md","/src/Dockerfile","/src/Gruntfile.js","/src/HALL_OF_FAME.md","/src/LICENSE","/src/README.md","/src/REFERENCES.md","/src/SECURITY.md","/src/SOLUTIONS.md","/src/app.json","/src/app.ts","/src/config/7ms.yml","/src/config/addo.yml","/src/config/bodgeit.yml","/src/config/ctf.yml","/src/config/default.yml","/src/config/fbctf.yml","/src/config/juicebox.yml","/src/config/mozilla.yml","/src/config/oss.yml","/src/config/quiet.yml","/src/config/test.yml","/src/config/tutorial.yml","/src/config/unsafe.yml","/src/config.schema.yml","/src/crowdin.yaml","/src/ctf.key","/src/cypress.config.ts","/src/data/chatbot/.gitkeep","/src/data/datacache.ts","/src/data/datacreator.ts","/src/data/mongodb.ts","/src/data/static/botDefaultTrainingData.json","/src/data/static/challenges.yml","/src/data/static/codefixes/.editorconfig","/src/data/static/codefixes/accessLogDisclosureChallenge.info.yml","/src/data/static/codefixes/accessLogDisclosureChallenge_1_correct.ts","/src/data/static/codefixes/accessLogDisclosureChallenge_2.ts","/src/data/static/codefixes/accessLogDisclosureChallenge_3.ts","/src/data/static/codefixes/accessLogDisclosureChallenge_4.ts","/src/data/static/codefixes/adminSectionChallenge.info.yml","/src/data/static/codefixes/adminSectionChallenge_1_correct.ts","/src/data/static/codefixes/adminSectionChallenge_2.ts","/src/data/static/codefixes/adminSectionChallenge_3.ts","/src/data/static/codefixes/adminSectionChallenge_4.ts","/src/data/static/codefixes/changeProductChallenge.info.yml","/src/data/static/codefixes/changeProductChallenge_1.ts","/src/data/static/codefixes/changeProductChallenge_2.ts","/src/data/static/codefixes/changeProductChallenge_3_correct.ts","/src/data/static/codefixes/changeProductChallenge_4.ts","/src/data/static/codefixes/dbSchemaChallenge.info.yml","/src/data/static/codefixes/dbSchemaChallenge_1.ts","/src/data/static/codefixes/dbSchemaChallenge_2_correct.ts","/src/data/static/codefixes/dbSchemaChallenge_3.ts","/src/data/static/codefixes/directoryListingChallenge.info.yml","/src/data/static/codefixes/directoryListingChallenge_1_correct.ts","/src/data/static/codefixes/directoryListingChallenge_2.ts","/src/data/static/codefixes/directoryListingChallenge_3.ts","/src/data/static/codefixes/directoryListingChallenge_4.ts","/src/data/static/codefixes/exposedMetricsChallenge.info.yml","/src/data/static/codefixes/exposedMetricsChallenge_1.ts","/src/data/static/codefixes/exposedMetricsChallenge_2.ts","/src/data/static/codefixes/exposedMetricsChallenge_3_correct.ts","/src/data/static/codefixes/forgedReviewChallenge.info.yml","/src/data/static/codefixes/forgedReviewChallenge_1.ts","/src/data/static/codefixes/forgedReviewChallenge_2_correct.ts","/src/data/static/codefixes/forgedReviewChallenge_3.ts","/src/data/static/codefixes/localXssChallenge.info.yml","/src/data/static/codefixes/localXssChallenge_1.ts","/src/data/static/codefixes/localXssChallenge_2_correct.ts","/src/data/static/codefixes/localXssChallenge_3.ts","/src/data/static/codefixes/localXssChallenge_4.ts","/src/data/static/codefixes/loginAdminChallenge.info.yml","/src/data/static/codefixes/loginAdminChallenge_1.ts","/src/data/static/codefixes/loginAdminChallenge_2.ts","/src/data/static/codefixes/loginAdminChallenge_3.ts","/src/data/static/codefixes/loginAdminChallenge_4_correct.ts","/src/data/static/codefixes/loginBenderChallenge.info.yml","/src/data/static/codefixes/loginBenderChallenge_1.ts","/src/data/static/codefixes/loginBenderChallenge_2_correct.ts","/src/data/static/codefixes/loginBenderChallenge_3.ts","/src/data/static/codefixes/loginBenderChallenge_4.ts","/src/data/static/codefixes/loginJimChallenge.info.yml","/src/data/static/codefixes/loginJimChallenge_1_correct.ts","/src/data/static/codefixes/loginJimChallenge_2.ts","/src/data/static/codefixes/loginJimChallenge_3.ts","/src/data/static/codefixes/loginJimChallenge_4.ts","/src/data/static/codefixes/nftMintChallenge.info.yml","/src/data/static/codefixes/nftMintChallenge_1.sol","/src/data/static/codefixes/nftMintChallenge_2.sol","/src/data/static/codefixes/nftMintChallenge_3.sol","/src/data/static/codefixes/nftMintChallenge_4_correct.sol","/src/data/static/codefixes/nftUnlockChallenge.info.yml","/src/data/static/codefixes/nftUnlockChallenge_1.sol","/src/data/static/codefixes/nftUnlockChallenge_2_correct.sol","/src/data/static/codefixes/nftUnlockChallenge_3.sol","/src/data/static/codefixes/nftUnlockChallenge_4.sol","/src/data/static/codefixes/noSqlReviewsChallenge.info.yml","/src/data/static/codefixes/noSqlReviewsChallenge_1.ts","/src/data/static/codefixes/noSqlReviewsChallenge_2.ts","/src/data/static/codefixes/noSqlReviewsChallenge_3_correct.ts","/src/data/static/codefixes/redirectChallenge.info.yml","/src/data/static/codefixes/redirectChallenge_1.ts","/src/data/static/codefixes/redirectChallenge_2.ts","/src/data/static/codefixes/redirectChallenge_3.ts","/src/data/static/codefixes/redirectChallenge_4_correct.ts","/src/data/static/codefixes/redirectCryptoCurrencyChallenge.info.yml","/src/data/static/codefixes/redirectCryptoCurrencyChallenge_1.ts","/src/data/static/codefixes/redirectCryptoCurrencyChallenge_2.ts","/src/data/static/codefixes/redirectCryptoCurrencyChallenge_3_correct.ts","/src/data/static/codefixes/redirectCryptoCurrencyChallenge_4.ts","/src/data/static/codefixes/registerAdminChallenge.info.yml","/src/data/static/codefixes/registerAdminChallenge_1.ts","/src/data/static/codefixes/registerAdminChallenge_2.ts","/src/data/static/codefixes/registerAdminChallenge_3_correct.ts","/src/data/static/codefixes/registerAdminChallenge_4.ts","/src/data/static/codefixes/resetPasswordBenderChallenge.info.yml","/src/data/static/codefixes/resetPasswordBenderChallenge_1.yml","/src/data/static/codefixes/resetPasswordBenderChallenge_2_correct.yml","/src/data/static/codefixes/resetPasswordBenderChallenge_3.yml","/src/data/static/codefixes/resetPasswordBjoernChallenge.info.yml","/src/data/static/codefixes/resetPasswordBjoernChallenge_1_correct.yml","/src/data/static/codefixes/resetPasswordBjoernChallenge_2.yml","/src/data/static/codefixes/resetPasswordBjoernChallenge_3.yml","/src/data/static/codefixes/resetPasswordBjoernOwaspChallenge.info.yml","/src/data/static/codefixes/resetPasswordBjoernOwaspChallenge_1.yml","/src/data/static/codefixes/resetPasswordBjoernOwaspChallenge_2_correct.yml","/src/data/static/codefixes/resetPasswordBjoernOwaspChallenge_3.yml","/src/data/static/codefixes/resetPasswordJimChallenge.info.yml","/src/data/static/codefixes/resetPasswordJimChallenge_1.yml","/src/data/static/codefixes/resetPasswordJimChallenge_2.yml","/src/data/static/codefixes/resetPasswordJimChallenge_3_correct.yml","/src/data/static/codefixes/resetPasswordMortyChallenge.info.yml","/src/data/static/codefixes/resetPasswordMortyChallenge_1.ts","/src/data/static/codefixes/resetPasswordMortyChallenge_2.ts","/src/data/static/codefixes/resetPasswordMortyChallenge_3.ts","/src/data/static/codefixes/resetPasswordMortyChallenge_4_correct.ts","/src/data/static/codefixes/resetPasswordUvoginChallenge.info.yml","/src/data/static/codefixes/resetPasswordUvoginChallenge_1.yml","/src/data/static/codefixes/resetPasswordUvoginChallenge_2.yml","/src/data/static/codefixes/resetPasswordUvoginChallenge_3_correct.yml","/src/data/static/codefixes/restfulXssChallenge.info.yml","/src/data/static/codefixes/restfulXssChallenge_1_correct.ts","/src/data/static/codefixes/restfulXssChallenge_2.ts","/src/data/static/codefixes/restfulXssChallenge_3.ts","/src/data/static/codefixes/restfulXssChallenge_4.ts","/src/data/static/codefixes/scoreBoardChallenge.info.yml","/src/data/static/codefixes/scoreBoardChallenge_1_correct.ts","/src/data/static/codefixes/scoreBoardChallenge_2.ts","/src/data/static/codefixes/scoreBoardChallenge_3.ts","/src/data/static/codefixes/tokenSaleChallenge.info.yml","/src/data/static/codefixes/tokenSaleChallenge_1.ts","/src/data/static/codefixes/tokenSaleChallenge_2.ts","/src/data/static/codefixes/tokenSaleChallenge_3_correct.ts","/src/data/static/codefixes/unionSqlInjectionChallenge.info.yml","/src/data/static/codefixes/unionSqlInjectionChallenge_1.ts","/src/data/static/codefixes/unionSqlInjectionChallenge_2_correct.ts","/src/data/static/codefixes/unionSqlInjectionChallenge_3.ts","/src/data/static/codefixes/weakPasswordChallenge.info.yml","/src/data/static/codefixes/weakPasswordChallenge_1_correct.ts","/src/data/static/codefixes/weakPasswordChallenge_2.ts","/src/data/static/codefixes/weakPasswordChallenge_3.ts","/src/data/static/codefixes/weakPasswordChallenge_4.ts","/src/data/static/codefixes/web3SandboxChallenge.info.yml","/src/data/static/codefixes/web3SandboxChallenge_1_correct.ts","/src/data/static/codefixes/web3SandboxChallenge_2.ts","/src/data/static/codefixes/web3SandboxChallenge_3.ts","/src/data/static/codefixes/web3WalletChallenge.info.yml","/src/data/static/codefixes/web3WalletChallenge_1.sol","/src/data/static/codefixes/web3WalletChallenge_2.sol","/src/data/static/codefixes/web3WalletChallenge_3_correct.sol","/src/data/static/codefixes/web3WalletChallenge_4.sol","/src/data/static/codefixes/xssBonusChallenge.info.yml","/src/data/static/codefixes/xssBonusChallenge_1_correct.ts","/src/data/static/codefixes/xssBonusChallenge_2.ts","/src/data/static/codefixes/xssBonusChallenge_3.ts","/src/data/static/codefixes/xssBonusChallenge_4.ts","/src/data/static/contractABIs.ts","/src/data/static/deliveries.yml","/src/data/static/i18n/ar_SA.json","/src/data/static/i18n/az_AZ.json","/src/data/static/i18n/bg_BG.json","/src/data/static/i18n/bn_BD.json","/src/data/static/i18n/ca_ES.json","/src/data/static/i18n/cs_CZ.json","/src/data/static/i18n/da_DK.json","/src/data/static/i18n/de_CH.json","/src/data/static/i18n/de_DE.json","/src/data/static/i18n/el_GR.json","/src/data/static/i18n/en.json","/src/data/static/i18n/es_ES.json","/src/data/static/i18n/et_EE.json","/src/data/static/i18n/fi_FI.json","/src/data/static/i18n/fr_FR.json","/src/data/static/i18n/ga_IE.json","/src/data/static/i18n/he_IL.json","/src/data/static/i18n/hi_IN.json","/src/data/static/i18n/hu_HU.json","/src/data/static/i18n/id_ID.json","/src/data/static/i18n/it_IT.json","/src/data/static/i18n/ja_JP.json","/src/data/static/i18n/ka_GE.json","/src/data/static/i18n/ko_KR.json","/src/data/static/i18n/lv_LV.json","/src/data/static/i18n/my_MM.json","/src/data/static/i18n/nl_NL.json","/src/data/static/i18n/no_NO.json","/src/data/static/i18n/pl_PL.json","/src/data/static/i18n/pt_BR.json","/src/data/static/i18n/pt_PT.json","/src/data/static/i18n/ro_RO.json","/src/data/static/i18n/ru_RU.json","/src/data/static/i18n/si_LK.json","/src/data/static/i18n/sv_SE.json","/src/data/static/i18n/th_TH.json","/src/data/static/i18n/tlh_AA.json","/src/data/static/i18n/tr_TR.json","/src/data/static/i18n/uk_UA.json","/src/data/static/i18n/zh_CN.json","/src/data/static/i18n/zh_HK.json","/src/data/static/i18n/zh_TW.json","/src/data/static/legal.md","/src/data/static/locales.json","/src/data/static/owasp_promo.vtt","/src/data/static/securityQuestions.yml","/src/data/static/users.yml","/src/data/static/web3-snippets/BEEToken.sol","/src/data/static/web3-snippets/BeeFaucet.sol","/src/data/static/web3-snippets/ETHWalletBank.sol","/src/data/static/web3-snippets/HoneyPotNFT.sol","/src/data/static/web3-snippets/JuiceShopSBT.sol","/src/data/staticData.ts","/src/data/types.ts","/src/docker-compose.test.yml","/src/encryptionkeys/jwt.pub","/src/encryptionkeys/premium.key","/src/frontend/.browserslistrc","/src/frontend/.editorconfig","/src/frontend/.eslintrc.js","/src/frontend/.gitignore","/src/frontend/.npmrc","/src/frontend/.stylelintrc.js","/src/frontend/angular.json","/src/frontend/package.json","/src/frontend/src/app/Models/backup.model.ts","/src/frontend/src/app/Models/challenge.model.ts","/src/frontend/src/app/Models/deliveryMethod.model.ts","/src/frontend/src/app/Models/product.model.ts","/src/frontend/src/app/Models/review.model.ts","/src/frontend/src/app/Models/securityQuestion.model.ts","/src/frontend/src/app/Services/address.service.spec.ts","/src/frontend/src/app/Services/address.service.ts","/src/frontend/src/app/Services/administration.service.spec.ts","/src/frontend/src/app/Services/administration.service.ts","/src/frontend/src/app/Services/basket.service.spec.ts","/src/frontend/src/app/Services/basket.service.ts","/src/frontend/src/app/Services/captcha.service.spec.ts","/src/frontend/src/app/Services/captcha.service.ts","/src/frontend/src/app/Services/challenge.service.spec.ts","/src/frontend/src/app/Services/challenge.service.ts","/src/frontend/src/app/Services/chatbot.service.spec.ts","/src/frontend/src/app/Services/chatbot.service.ts","/src/frontend/src/app/Services/code-fixes.service.spec.ts","/src/frontend/src/app/Services/code-fixes.service.ts","/src/frontend/src/app/Services/code-snippet.service.spec.ts","/src/frontend/src/app/Services/code-snippet.service.ts","/src/frontend/src/app/Services/complaint.service.spec.ts","/src/frontend/src/app/Services/complaint.service.ts","/src/frontend/src/app/Services/configuration.service.spec.ts","/src/frontend/src/app/Services/configuration.service.ts","/src/frontend/src/app/Services/country-mapping.service.spec.ts","/src/frontend/src/app/Services/country-mapping.service.ts","/src/frontend/src/app/Services/data-subject.service.spec.ts","/src/frontend/src/app/Services/data-subject.service.ts","/src/frontend/src/app/Services/delivery.service.spec.ts","/src/frontend/src/app/Services/delivery.service.ts","/src/frontend/src/app/Services/feedback.service.spec.ts","/src/frontend/src/app/Services/feedback.service.ts","/src/frontend/src/app/Services/form-submit.service.spec.ts","/src/frontend/src/app/Services/form-submit.service.ts","/src/frontend/src/app/Services/image-captcha.service.spec.ts","/src/frontend/src/app/Services/image-captcha.service.ts","/src/frontend/src/app/Services/keys.service.ts","/src/frontend/src/app/Services/languages.service.spec.ts","/src/frontend/src/app/Services/languages.service.ts","/src/frontend/src/app/Services/local-backup.service.spec.ts","/src/frontend/src/app/Services/local-backup.service.ts","/src/frontend/src/app/Services/order-history.service.spec.ts","/src/frontend/src/app/Services/order-history.service.ts","/src/frontend/src/app/Services/payment.service.spec.ts","/src/frontend/src/app/Services/payment.service.ts","/src/frontend/src/app/Services/photo-wall.service.spec.ts","/src/frontend/src/app/Services/photo-wall.service.ts","/src/frontend/src/app/Services/product-review.service.spec.ts","/src/frontend/src/app/Services/product-review.service.ts","/src/frontend/src/app/Services/product.service.spec.ts","/src/frontend/src/app/Services/product.service.ts","/src/frontend/src/app/Services/quantity.service.spec.ts","/src/frontend/src/app/Services/quantity.service.ts","/src/frontend/src/app/Services/recycle.service.spec.ts","/src/frontend/src/app/Services/recycle.service.ts","/src/frontend/src/app/Services/request.interceptor.ts","/src/frontend/src/app/Services/security-answer.service.spec.ts","/src/frontend/src/app/Services/security-answer.service.ts","/src/frontend/src/app/Services/security-question.service.spec.ts","/src/frontend/src/app/Services/security-question.service.ts","/src/frontend/src/app/Services/snack-bar-helper.service.spec.ts","/src/frontend/src/app/Services/snack-bar-helper.service.ts","/src/frontend/src/app/Services/socket-io.service.spec.ts","/src/frontend/src/app/Services/socket-io.service.ts","/src/frontend/src/app/Services/track-order.service.spec.ts","/src/frontend/src/app/Services/track-order.service.ts","/src/frontend/src/app/Services/two-factor-auth-service.spec.ts","/src/frontend/src/app/Services/two-factor-auth-service.ts","/src/frontend/src/app/Services/user.service.spec.ts","/src/frontend/src/app/Services/user.service.ts","/src/frontend/src/app/Services/vuln-lines.service.spec.ts","/src/frontend/src/app/Services/vuln-lines.service.ts","/src/frontend/src/app/Services/wallet.service.spec.ts","/src/frontend/src/app/Services/wallet.service.ts","/src/frontend/src/app/Services/window-ref.service.spec.ts","/src/frontend/src/app/Services/window-ref.service.ts","/src/frontend/src/app/about/about.component.html","/src/frontend/src/app/about/about.component.scss","/src/frontend/src/app/about/about.component.spec.ts","/src/frontend/src/app/about/about.component.ts","/src/frontend/src/app/accounting/accounting.component.html","/src/frontend/src/app/accounting/accounting.component.scss","/src/frontend/src/app/accounting/accounting.component.spec.ts","/src/frontend/src/app/accounting/accounting.component.ts","/src/frontend/src/app/address/address.component.html","/src/frontend/src/app/address/address.component.scss","/src/frontend/src/app/address/address.component.spec.ts","/src/frontend/src/app/address/address.component.ts","/src/frontend/src/app/address-create/address-create.component.html","/src/frontend/src/app/address-create/address-create.component.scss","/src/frontend/src/app/address-create/address-create.component.spec.ts","/src/frontend/src/app/address-create/address-create.component.ts","/src/frontend/src/app/address-select/address-select.component.html","/src/frontend/src/app/address-select/address-select.component.scss","/src/frontend/src/app/address-select/address-select.component.spec.ts","/src/frontend/src/app/address-select/address-select.component.ts","/src/frontend/src/app/administration/administration.component.html","/src/frontend/src/app/administration/administration.component.scss","/src/frontend/src/app/administration/administration.component.spec.ts","/src/frontend/src/app/administration/administration.component.ts","/src/frontend/src/app/app.component.html","/src/frontend/src/app/app.component.scss","/src/frontend/src/app/app.component.spec.ts","/src/frontend/src/app/app.component.ts","/src/frontend/src/app/app.guard.spec.ts","/src/frontend/src/app/app.guard.ts","/src/frontend/src/app/app.module.ts","/src/frontend/src/app/app.routing.ts","/src/frontend/src/app/basket/basket.component.html","/src/frontend/src/app/basket/basket.component.scss","/src/frontend/src/app/basket/basket.component.spec.ts","/src/frontend/src/app/basket/basket.component.ts","/src/frontend/src/app/challenge-solved-notification/challenge-solved-notification.component.html","/src/frontend/src/app/challenge-solved-notification/challenge-solved-notification.component.scss","/src/frontend/src/app/challenge-solved-notification/challenge-solved-notification.component.spec.ts","/src/frontend/src/app/challenge-solved-notification/challenge-solved-notification.component.ts","/src/frontend/src/app/challenge-status-badge/challenge-status-badge.component.html","/src/frontend/src/app/challenge-status-badge/challenge-status-badge.component.scss","/src/frontend/src/app/challenge-status-badge/challenge-status-badge.component.spec.ts","/src/frontend/src/app/challenge-status-badge/challenge-status-badge.component.ts","/src/frontend/src/app/change-password/change-password.component.html","/src/frontend/src/app/change-password/change-password.component.scss","/src/frontend/src/app/change-password/change-password.component.spec.ts","/src/frontend/src/app/change-password/change-password.component.ts","/src/frontend/src/app/chatbot/chatbot.component.html","/src/frontend/src/app/chatbot/chatbot.component.scss","/src/frontend/src/app/chatbot/chatbot.component.spec.ts","/src/frontend/src/app/chatbot/chatbot.component.ts","/src/frontend/src/app/code-area/code-area.component.html","/src/frontend/src/app/code-area/code-area.component.scss","/src/frontend/src/app/code-area/code-area.component.spec.ts","/src/frontend/src/app/code-area/code-area.component.ts","/src/frontend/src/app/code-fixes/code-fixes.component.html","/src/frontend/src/app/code-fixes/code-fixes.component.scss","/src/frontend/src/app/code-fixes/code-fixes.component.spec.ts","/src/frontend/src/app/code-fixes/code-fixes.component.ts","/src/frontend/src/app/code-snippet/code-snippet.component.html","/src/frontend/src/app/code-snippet/code-snippet.component.scss","/src/frontend/src/app/code-snippet/code-snippet.component.spec.ts","/src/frontend/src/app/code-snippet/code-snippet.component.ts","/src/frontend/src/app/complaint/complaint.component.html","/src/frontend/src/app/complaint/complaint.component.scss","/src/frontend/src/app/complaint/complaint.component.spec.ts","/src/frontend/src/app/complaint/complaint.component.ts","/src/frontend/src/app/contact/contact.component.html","/src/frontend/src/app/contact/contact.component.scss","/src/frontend/src/app/contact/contact.component.spec.ts","/src/frontend/src/app/contact/contact.component.ts","/src/frontend/src/app/data-export/data-export.component.html","/src/frontend/src/app/data-export/data-export.component.scss","/src/frontend/src/app/data-export/data-export.component.spec.ts","/src/frontend/src/app/data-export/data-export.component.ts","/src/frontend/src/app/delivery-method/delivery-method.component.html","/src/frontend/src/app/delivery-method/delivery-method.component.scss","/src/frontend/src/app/delivery-method/delivery-method.component.spec.ts","/src/frontend/src/app/delivery-method/delivery-method.component.ts","/src/frontend/src/app/deluxe-user/deluxe-user.component.html","/src/frontend/src/app/deluxe-user/deluxe-user.component.scss","/src/frontend/src/app/deluxe-user/deluxe-user.component.spec.ts","/src/frontend/src/app/deluxe-user/deluxe-user.component.ts","/src/frontend/src/app/error-page/error-page.component.html","/src/frontend/src/app/error-page/error-page.component.scss","/src/frontend/src/app/error-page/error-page.component.spec.ts","/src/frontend/src/app/error-page/error-page.component.ts","/src/frontend/src/app/faucet/faucet.component.html","/src/frontend/src/app/faucet/faucet.component.scss","/src/frontend/src/app/faucet/faucet.component.ts","/src/frontend/src/app/faucet/faucet.module.ts","/src/frontend/src/app/feedback-details/feedback-details.component.html","/src/frontend/src/app/feedback-details/feedback-details.component.scss","/src/frontend/src/app/feedback-details/feedback-details.component.spec.ts","/src/frontend/src/app/feedback-details/feedback-details.component.ts","/src/frontend/src/app/forgot-password/forgot-password.component.html","/src/frontend/src/app/forgot-password/forgot-password.component.scss","/src/frontend/src/app/forgot-password/forgot-password.component.spec.ts","/src/frontend/src/app/forgot-password/forgot-password.component.ts","/src/frontend/src/app/last-login-ip/last-login-ip.component.html","/src/frontend/src/app/last-login-ip/last-login-ip.component.scss","/src/frontend/src/app/last-login-ip/last-login-ip.component.spec.ts","/src/frontend/src/app/last-login-ip/last-login-ip.component.ts","/src/frontend/src/app/login/login.component.html","/src/frontend/src/app/login/login.component.scss","/src/frontend/src/app/login/login.component.spec.ts","/src/frontend/src/app/login/login.component.ts","/src/frontend/src/app/mat-search-bar/abstract-value-accessor.ts","/src/frontend/src/app/mat-search-bar/mat-search-bar.component.html","/src/frontend/src/app/mat-search-bar/mat-search-bar.component.scss","/src/frontend/src/app/mat-search-bar/mat-search-bar.component.ts","/src/frontend/src/app/navbar/navbar.component.html","/src/frontend/src/app/navbar/navbar.component.scss","/src/frontend/src/app/navbar/navbar.component.spec.ts","/src/frontend/src/app/navbar/navbar.component.ts","/src/frontend/src/app/nft-unlock/nft-unlock.component.html","/src/frontend/src/app/nft-unlock/nft-unlock.component.scss","/src/frontend/src/app/nft-unlock/nft-unlock.component.ts","/src/frontend/src/app/oauth/oauth.component.html","/src/frontend/src/app/oauth/oauth.component.scss","/src/frontend/src/app/oauth/oauth.component.spec.ts","/src/frontend/src/app/oauth/oauth.component.ts","/src/frontend/src/app/order-completion/order-completion.component.html","/src/frontend/src/app/order-completion/order-completion.component.scss","/src/frontend/src/app/order-completion/order-completion.component.spec.ts","/src/frontend/src/app/order-completion/order-completion.component.ts","/src/frontend/src/app/order-history/order-history.component.html","/src/frontend/src/app/order-history/order-history.component.scss","/src/frontend/src/app/order-history/order-history.component.spec.ts","/src/frontend/src/app/order-history/order-history.component.ts","/src/frontend/src/app/order-summary/order-summary.component.html","/src/frontend/src/app/order-summary/order-summary.component.scss","/src/frontend/src/app/order-summary/order-summary.component.spec.ts","/src/frontend/src/app/order-summary/order-summary.component.ts","/src/frontend/src/app/password-strength/password-strength.component.html","/src/frontend/src/app/password-strength/password-strength.component.scss","/src/frontend/src/app/password-strength/password-strength.component.spec.ts","/src/frontend/src/app/password-strength/password-strength.component.ts","/src/frontend/src/app/password-strength-info/password-strength-info.component.html","/src/frontend/src/app/password-strength-info/password-strength-info.component.scss","/src/frontend/src/app/password-strength-info/password-strength-info.component.spec.ts","/src/frontend/src/app/password-strength-info/password-strength-info.component.ts","/src/frontend/src/app/payment/payment.component.html","/src/frontend/src/app/payment/payment.component.scss","/src/frontend/src/app/payment/payment.component.spec.ts","/src/frontend/src/app/payment/payment.component.ts","/src/frontend/src/app/payment-method/payment-method.component.html","/src/frontend/src/app/payment-method/payment-method.component.scss","/src/frontend/src/app/payment-method/payment-method.component.spec.ts","/src/frontend/src/app/payment-method/payment-method.component.ts","/src/frontend/src/app/photo-wall/mime-type.validator.ts","/src/frontend/src/app/photo-wall/photo-wall.component.html","/src/frontend/src/app/photo-wall/photo-wall.component.scss","/src/frontend/src/app/photo-wall/photo-wall.component.spec.ts","/src/frontend/src/app/photo-wall/photo-wall.component.ts","/src/frontend/src/app/privacy-policy/privacy-policy.component.html","/src/frontend/src/app/privacy-policy/privacy-policy.component.scss","/src/frontend/src/app/privacy-policy/privacy-policy.component.spec.ts","/src/frontend/src/app/privacy-policy/privacy-policy.component.ts","/src/frontend/src/app/privacy-security/privacy-security.component.html","/src/frontend/src/app/privacy-security/privacy-security.component.scss","/src/frontend/src/app/privacy-security/privacy-security.component.spec.ts","/src/frontend/src/app/privacy-security/privacy-security.component.ts","/src/frontend/src/app/product-details/product-details.component.html","/src/frontend/src/app/product-details/product-details.component.scss","/src/frontend/src/app/product-details/product-details.component.spec.ts","/src/frontend/src/app/product-details/product-details.component.ts","/src/frontend/src/app/product-review-edit/product-review-edit.component.html","/src/frontend/src/app/product-review-edit/product-review-edit.component.scss","/src/frontend/src/app/product-review-edit/product-review-edit.component.spec.ts","/src/frontend/src/app/product-review-edit/product-review-edit.component.ts","/src/frontend/src/app/purchase-basket/purchase-basket.component.html","/src/frontend/src/app/purchase-basket/purchase-basket.component.scss","/src/frontend/src/app/purchase-basket/purchase-basket.component.spec.ts","/src/frontend/src/app/purchase-basket/purchase-basket.component.ts","/src/frontend/src/app/qr-code/qr-code.component.html","/src/frontend/src/app/qr-code/qr-code.component.scss","/src/frontend/src/app/qr-code/qr-code.component.spec.ts","/src/frontend/src/app/qr-code/qr-code.component.ts","/src/frontend/src/app/recycle/recycle.component.html","/src/frontend/src/app/recycle/recycle.component.scss","/src/frontend/src/app/recycle/recycle.component.spec.ts","/src/frontend/src/app/recycle/recycle.component.ts","/src/frontend/src/app/register/register.component.html","/src/frontend/src/app/register/register.component.scss","/src/frontend/src/app/register/register.component.spec.ts","/src/frontend/src/app/register/register.component.ts","/src/frontend/src/app/roles.ts","/src/frontend/src/app/saved-address/saved-address.component.html","/src/frontend/src/app/saved-address/saved-address.component.scss","/src/frontend/src/app/saved-address/saved-address.component.spec.ts","/src/frontend/src/app/saved-address/saved-address.component.ts","/src/frontend/src/app/saved-payment-methods/saved-payment-methods.component.html","/src/frontend/src/app/saved-payment-methods/saved-payment-methods.component.scss","/src/frontend/src/app/saved-payment-methods/saved-payment-methods.component.spec.ts","/src/frontend/src/app/saved-payment-methods/saved-payment-methods.component.ts","/src/frontend/src/app/score-board/components/challenge-card/challenge-card.component.html","/src/frontend/src/app/score-board/components/challenge-card/challenge-card.component.scss","/src/frontend/src/app/score-board/components/challenge-card/challenge-card.component.spec.ts","/src/frontend/src/app/score-board/components/challenge-card/challenge-card.component.ts","/src/frontend/src/app/score-board/components/challenges-unavailable-warning/challenges-unavailable-warning.component.html","/src/frontend/src/app/score-board/components/challenges-unavailable-warning/challenges-unavailable-warning.component.scss","/src/frontend/src/app/score-board/components/challenges-unavailable-warning/challenges-unavailable-warning.component.spec.ts","/src/frontend/src/app/score-board/components/challenges-unavailable-warning/challenges-unavailable-warning.component.ts","/src/frontend/src/app/score-board/components/coding-challenge-progress-score-card/coding-challenge-progress-score-card.component.html","/src/frontend/src/app/score-board/components/coding-challenge-progress-score-card/coding-challenge-progress-score-card.component.scss","/src/frontend/src/app/score-board/components/coding-challenge-progress-score-card/coding-challenge-progress-score-card.component.spec.ts","/src/frontend/src/app/score-board/components/coding-challenge-progress-score-card/coding-challenge-progress-score-card.component.ts","/src/frontend/src/app/score-board/components/difficulty-overview-score-card/difficulty-overview-score-card.component.html","/src/frontend/src/app/score-board/components/difficulty-overview-score-card/difficulty-overview-score-card.component.scss","/src/frontend/src/app/score-board/components/difficulty-overview-score-card/difficulty-overview-score-card.component.spec.ts","/src/frontend/src/app/score-board/components/difficulty-overview-score-card/difficulty-overview-score-card.component.ts","/src/frontend/src/app/score-board/components/difficulty-stars/difficulty-stars.component.html","/src/frontend/src/app/score-board/components/difficulty-stars/difficulty-stars.component.scss","/src/frontend/src/app/score-board/components/difficulty-stars/difficulty-stars.component.ts","/src/frontend/src/app/score-board/components/filter-settings/components/category-filter/category-filter.component.html","/src/frontend/src/app/score-board/components/filter-settings/components/category-filter/category-filter.component.scss","/src/frontend/src/app/score-board/components/filter-settings/components/category-filter/category-filter.component.spec.ts","/src/frontend/src/app/score-board/components/filter-settings/components/category-filter/category-filter.component.ts","/src/frontend/src/app/score-board/components/filter-settings/components/score-board-additional-settings-dialog/score-board-additional-settings-dialog.component.html","/src/frontend/src/app/score-board/components/filter-settings/components/score-board-additional-settings-dialog/score-board-additional-settings-dialog.component.scss","/src/frontend/src/app/score-board/components/filter-settings/components/score-board-additional-settings-dialog/score-board-additional-settings-dialog.component.spec.ts","/src/frontend/src/app/score-board/components/filter-settings/components/score-board-additional-settings-dialog/score-board-additional-settings-dialog.component.ts","/src/frontend/src/app/score-board/components/filter-settings/filter-settings.component.html","/src/frontend/src/app/score-board/components/filter-settings/filter-settings.component.scss","/src/frontend/src/app/score-board/components/filter-settings/filter-settings.component.spec.ts","/src/frontend/src/app/score-board/components/filter-settings/filter-settings.component.ts","/src/frontend/src/app/score-board/components/filter-settings/pipes/difficulty-selection-summary.pipe.spec.ts","/src/frontend/src/app/score-board/components/filter-settings/pipes/difficulty-selection-summary.pipe.ts","/src/frontend/src/app/score-board/components/hacking-challenge-progress-score-card/hacking-challenge-progress-score-card.component.html","/src/frontend/src/app/score-board/components/hacking-challenge-progress-score-card/hacking-challenge-progress-score-card.component.scss","/src/frontend/src/app/score-board/components/hacking-challenge-progress-score-card/hacking-challenge-progress-score-card.component.spec.ts","/src/frontend/src/app/score-board/components/hacking-challenge-progress-score-card/hacking-challenge-progress-score-card.component.ts","/src/frontend/src/app/score-board/components/score-card/score-card.component.html","/src/frontend/src/app/score-board/components/score-card/score-card.component.scss","/src/frontend/src/app/score-board/components/score-card/score-card.component.spec.ts","/src/frontend/src/app/score-board/components/score-card/score-card.component.ts","/src/frontend/src/app/score-board/components/tutorial-mode-warning/tutorial-mode-warning.component.html","/src/frontend/src/app/score-board/components/tutorial-mode-warning/tutorial-mode-warning.component.spec.ts","/src/frontend/src/app/score-board/components/tutorial-mode-warning/tutorial-mode-warning.component.ts","/src/frontend/src/app/score-board/components/warning-card/warning-card.component.html","/src/frontend/src/app/score-board/components/warning-card/warning-card.component.scss","/src/frontend/src/app/score-board/components/warning-card/warning-card.component.ts","/src/frontend/src/app/score-board/filter-settings/FilterSetting.ts","/src/frontend/src/app/score-board/filter-settings/query-params-converters.ts","/src/frontend/src/app/score-board/filter-settings/query-params-coverter.spec.ts","/src/frontend/src/app/score-board/helpers/challenge-filtering.spec.ts","/src/frontend/src/app/score-board/helpers/challenge-filtering.ts","/src/frontend/src/app/score-board/helpers/challenge-sorting.spec.ts","/src/frontend/src/app/score-board/helpers/challenge-sorting.ts","/src/frontend/src/app/score-board/pipes/challenge-hint.pipe.ts","/src/frontend/src/app/score-board/score-board.component.html","/src/frontend/src/app/score-board/score-board.component.scss","/src/frontend/src/app/score-board/score-board.component.spec.ts","/src/frontend/src/app/score-board/score-board.component.ts","/src/frontend/src/app/score-board/score-board.module.ts","/src/frontend/src/app/score-board/types/EnrichedChallenge.ts","/src/frontend/src/app/search-result/search-result.component.html","/src/frontend/src/app/search-result/search-result.component.scss","/src/frontend/src/app/search-result/search-result.component.spec.ts","/src/frontend/src/app/search-result/search-result.component.ts","/src/frontend/src/app/server-started-notification/server-started-notification.component.html","/src/frontend/src/app/server-started-notification/server-started-notification.component.scss","/src/frontend/src/app/server-started-notification/server-started-notification.component.spec.ts","/src/frontend/src/app/server-started-notification/server-started-notification.component.ts","/src/frontend/src/app/sidenav/sidenav.component.html","/src/frontend/src/app/sidenav/sidenav.component.scss","/src/frontend/src/app/sidenav/sidenav.component.spec.ts","/src/frontend/src/app/sidenav/sidenav.component.ts","/src/frontend/src/app/token-sale/token-sale.component.html","/src/frontend/src/app/token-sale/token-sale.component.scss","/src/frontend/src/app/token-sale/token-sale.component.spec.ts","/src/frontend/src/app/token-sale/token-sale.component.ts","/src/frontend/src/app/track-result/track-result.component.html","/src/frontend/src/app/track-result/track-result.component.scss","/src/frontend/src/app/track-result/track-result.component.spec.ts","/src/frontend/src/app/track-result/track-result.component.ts","/src/frontend/src/app/two-factor-auth/two-factor-auth.component.html","/src/frontend/src/app/two-factor-auth/two-factor-auth.component.scss","/src/frontend/src/app/two-factor-auth/two-factor-auth.component.spec.ts","/src/frontend/src/app/two-factor-auth/two-factor-auth.component.ts","/src/frontend/src/app/two-factor-auth-enter/two-factor-auth-enter.component.html","/src/frontend/src/app/two-factor-auth-enter/two-factor-auth-enter.component.scss","/src/frontend/src/app/two-factor-auth-enter/two-factor-auth-enter.component.spec.ts","/src/frontend/src/app/two-factor-auth-enter/two-factor-auth-enter.component.ts","/src/frontend/src/app/user-details/user-details.component.html","/src/frontend/src/app/user-details/user-details.component.scss","/src/frontend/src/app/user-details/user-details.component.spec.ts","/src/frontend/src/app/user-details/user-details.component.ts","/src/frontend/src/app/wallet/wallet.component.html","/src/frontend/src/app/wallet/wallet.component.scss","/src/frontend/src/app/wallet/wallet.component.spec.ts","/src/frontend/src/app/wallet/wallet.component.ts","/src/frontend/src/app/wallet-web3/wallet-web3.component.html","/src/frontend/src/app/wallet-web3/wallet-web3.component.scss","/src/frontend/src/app/wallet-web3/wallet-web3.component.ts","/src/frontend/src/app/wallet-web3/wallet-web3.module.ts","/src/frontend/src/app/web3-sandbox/web3-sandbox.component.html","/src/frontend/src/app/web3-sandbox/web3-sandbox.component.scss","/src/frontend/src/app/web3-sandbox/web3-sandbox.component.ts","/src/frontend/src/app/web3-sandbox/web3-sandbox.module.ts","/src/frontend/src/app/welcome/welcome.component.html","/src/frontend/src/app/welcome/welcome.component.scss","/src/frontend/src/app/welcome/welcome.component.spec.ts","/src/frontend/src/app/welcome/welcome.component.ts","/src/frontend/src/app/welcome-banner/welcome-banner.component.html","/src/frontend/src/app/welcome-banner/welcome-banner.component.scss","/src/frontend/src/app/welcome-banner/welcome-banner.component.spec.ts","/src/frontend/src/app/welcome-banner/welcome-banner.component.ts","/src/frontend/src/assets/i18n/ar_SA.json","/src/frontend/src/assets/i18n/az_AZ.json","/src/frontend/src/assets/i18n/bg_BG.json","/src/frontend/src/assets/i18n/bn_BD.json","/src/frontend/src/assets/i18n/ca_ES.json","/src/frontend/src/assets/i18n/cs_CZ.json","/src/frontend/src/assets/i18n/da_DK.json","/src/frontend/src/assets/i18n/de_CH.json","/src/frontend/src/assets/i18n/de_DE.json","/src/frontend/src/assets/i18n/el_GR.json","/src/frontend/src/assets/i18n/en.json","/src/frontend/src/assets/i18n/es_ES.json","/src/frontend/src/assets/i18n/et_EE.json","/src/frontend/src/assets/i18n/fi_FI.json","/src/frontend/src/assets/i18n/fr_FR.json","/src/frontend/src/assets/i18n/ga_IE.json","/src/frontend/src/assets/i18n/he_IL.json","/src/frontend/src/assets/i18n/hi_IN.json","/src/frontend/src/assets/i18n/hu_HU.json","/src/frontend/src/assets/i18n/id_ID.json","/src/frontend/src/assets/i18n/it_IT.json","/src/frontend/src/assets/i18n/ja_JP.json","/src/frontend/src/assets/i18n/ka_GE.json","/src/frontend/src/assets/i18n/ko_KR.json","/src/frontend/src/assets/i18n/lv_LV.json","/src/frontend/src/assets/i18n/my_MM.json","/src/frontend/src/assets/i18n/nl_NL.json","/src/frontend/src/assets/i18n/no_NO.json","/src/frontend/src/assets/i18n/pl_PL.json","/src/frontend/src/assets/i18n/pt_BR.json","/src/frontend/src/assets/i18n/pt_PT.json","/src/frontend/src/assets/i18n/ro_RO.json","/src/frontend/src/assets/i18n/ru_RU.json","/src/frontend/src/assets/i18n/si_LK.json","/src/frontend/src/assets/i18n/sv_SE.json","/src/frontend/src/assets/i18n/th_TH.json","/src/frontend/src/assets/i18n/tlh_AA.json","/src/frontend/src/assets/i18n/tr_TR.json","/src/frontend/src/assets/i18n/uk_UA.json","/src/frontend/src/assets/i18n/zh_CN.json","/src/frontend/src/assets/i18n/zh_HK.json","/src/frontend/src/assets/i18n/zh_TW.json","/src/frontend/src/assets/private/CopyShader.js","/src/frontend/src/assets/private/EffectComposer.js","/src/frontend/src/assets/private/JuiceShop_Wallpaper_1920x1080_VR.jpg","/src/frontend/src/assets/private/MaskPass.js","/src/frontend/src/assets/private/OrbitControls.js","/src/frontend/src/assets/private/RenderPass.js","/src/frontend/src/assets/private/ShaderPass.js","/src/frontend/src/assets/private/earthspec4k.jpg","/src/frontend/src/assets/private/orangemap2k.jpg","/src/frontend/src/assets/private/three.js","/src/frontend/src/assets/private/threejs-demo.html","/src/frontend/src/assets/public/ContractABIs.ts","/src/frontend/src/assets/public/css/dataErasure.css","/src/frontend/src/assets/public/css/userProfile.css","/src/frontend/src/assets/public/favicon_ctf.ico","/src/frontend/src/assets/public/favicon_js.ico","/src/frontend/src/assets/public/images/BeeOwner.png","/src/frontend/src/assets/public/images/HoneyPot.png","/src/frontend/src/assets/public/images/JuiceShopCTF_Logo.png","/src/frontend/src/assets/public/images/JuiceShopCTF_Logo_400px.png","/src/frontend/src/assets/public/images/JuiceShop_Logo.ai","/src/frontend/src/assets/public/images/JuiceShop_Logo.png","/src/frontend/src/assets/public/images/JuiceShop_Logo.svg","/src/frontend/src/assets/public/images/JuiceShop_Logo_100px.png","/src/frontend/src/assets/public/images/JuiceShop_Logo_400px.png","/src/frontend/src/assets/public/images/JuiceShop_Logo_50px.png","/src/frontend/src/assets/public/images/JuicyBot.png","/src/frontend/src/assets/public/images/JuicyBot_MedicalMask.png","/src/frontend/src/assets/public/images/JuicyChatBot.png","/src/frontend/src/assets/public/images/Welcome_Banner.svg","/src/frontend/src/assets/public/images/carousel/1.jpg","/src/frontend/src/assets/public/images/carousel/2.jpg","/src/frontend/src/assets/public/images/carousel/3.jpg","/src/frontend/src/assets/public/images/carousel/4.jpg","/src/frontend/src/assets/public/images/carousel/5.png","/src/frontend/src/assets/public/images/carousel/6.jpg","/src/frontend/src/assets/public/images/carousel/7.jpg","/src/frontend/src/assets/public/images/deluxe/blankBoxes.png","/src/frontend/src/assets/public/images/juicyEvilWasp.png","/src/frontend/src/assets/public/images/padding/11px.png","/src/frontend/src/assets/public/images/padding/19px.png","/src/frontend/src/assets/public/images/padding/1px.png","/src/frontend/src/assets/public/images/padding/56px.png","/src/frontend/src/assets/public/images/padding/81px.png","/src/frontend/src/assets/public/images/products/3d_keychain.jpg","/src/frontend/src/assets/public/images/products/JuiceShop.stl","/src/frontend/src/assets/public/images/products/apple_juice.jpg","/src/frontend/src/assets/public/images/products/apple_pressings.jpg","/src/frontend/src/assets/public/images/products/artwork.jpg","/src/frontend/src/assets/public/images/products/artwork2.jpg","/src/frontend/src/assets/public/images/products/banana_juice.jpg","/src/frontend/src/assets/public/images/products/card_alpha.jpg","/src/frontend/src/assets/public/images/products/carrot_juice.jpeg","/src/frontend/src/assets/public/images/products/ccg_common.png","/src/frontend/src/assets/public/images/products/ccg_foil.png","/src/frontend/src/assets/public/images/products/coaster.jpg","/src/frontend/src/assets/public/images/products/cover_small.jpg","/src/frontend/src/assets/public/images/products/eggfruit_juice.jpg","/src/frontend/src/assets/public/images/products/fan_facemask.jpg","/src/frontend/src/assets/public/images/products/fan_girlie.jpg","/src/frontend/src/assets/public/images/products/fan_hoodie.jpg","/src/frontend/src/assets/public/images/products/fan_mug.jpg","/src/frontend/src/assets/public/images/products/fan_shirt.jpg","/src/frontend/src/assets/public/images/products/fruit_press.jpg","/src/frontend/src/assets/public/images/products/green_smoothie.jpg","/src/frontend/src/assets/public/images/products/holo_sticker.png","/src/frontend/src/assets/public/images/products/iron-on.jpg","/src/frontend/src/assets/public/images/products/juicy_chatbot.jpg","/src/frontend/src/assets/public/images/products/lego_case.jpg","/src/frontend/src/assets/public/images/products/lemon_juice.jpg","/src/frontend/src/assets/public/images/products/magnets.jpg","/src/frontend/src/assets/public/images/products/melon_bike.jpeg","/src/frontend/src/assets/public/images/products/no-results.png","/src/frontend/src/assets/public/images/products/orange_juice.jpg","/src/frontend/src/assets/public/images/products/permafrost.jpg","/src/frontend/src/assets/public/images/products/quince.jpg","/src/frontend/src/assets/public/images/products/raspberry_juice.jpg","/src/frontend/src/assets/public/images/products/snakes_ladders.jpg","/src/frontend/src/assets/public/images/products/snakes_ladders_m.jpg","/src/frontend/src/assets/public/images/products/squareBox1-40x40x40.stl","/src/frontend/src/assets/public/images/products/sticker.png","/src/frontend/src/assets/public/images/products/sticker_page.jpg","/src/frontend/src/assets/public/images/products/sticker_single.jpg","/src/frontend/src/assets/public/images/products/stickersheet_se.png","/src/frontend/src/assets/public/images/products/strawberry_juice.jpeg","/src/frontend/src/assets/public/images/products/tattoo.jpg","/src/frontend/src/assets/public/images/products/thingie1.jpg","/src/frontend/src/assets/public/images/products/undefined.png","/src/frontend/src/assets/public/images/products/user_day_ticket.png","/src/frontend/src/assets/public/images/products/velcro-patch.jpg","/src/frontend/src/assets/public/images/products/waspy.png","/src/frontend/src/assets/public/images/products/woodruff_syrup.jpg","/src/frontend/src/assets/public/images/uploads/12.png","/src/frontend/src/assets/public/images/uploads/13.jpg","/src/frontend/src/assets/public/images/uploads/20.jpg","/src/frontend/src/assets/public/images/uploads/BeeHaven.png","/src/frontend/src/assets/public/images/uploads/building-something-literally-bottom-up-1721152342603.jpg","/src/frontend/src/assets/public/images/uploads/default.svg","/src/frontend/src/assets/public/images/uploads/defaultAdmin.png","/src/frontend/src/assets/public/images/uploads/everything-up-and-running!-1721152385146.jpg","/src/frontend/src/assets/public/images/uploads/favorite-hiking-place.png","/src/frontend/src/assets/public/images/uploads/magn(et)ificent!-1571814229653.jpg","/src/frontend/src/assets/public/images/uploads/my-rare-collectors-item!-[̲̅$̲̅(̲̅-͡°-͜ʖ-͡°̲̅)̲̅$̲̅]-1572603645543.jpg","/src/frontend/src/assets/public/images/uploads/putting-in-the-hardware-1721152366854.jpg","/src/frontend/src/assets/public/images/uploads/sorted-the-pieces,-starting-assembly-process-1721152307290.jpg","/src/frontend/src/assets/public/images/uploads/ᓚᘏᗢ-#zatschi-#whoneedsfourlegs-1572600969477.jpg","/src/frontend/src/confetti/index.ts","/src/frontend/src/environments/environment.prod.ts","/src/frontend/src/environments/environment.ts","/src/frontend/src/hacking-instructor/challenges/adminSection.ts","/src/frontend/src/hacking-instructor/challenges/bonusPayload.ts","/src/frontend/src/hacking-instructor/challenges/codingChallenges.ts","/src/frontend/src/hacking-instructor/challenges/domXss.ts","/src/frontend/src/hacking-instructor/challenges/exposedCredentials.ts","/src/frontend/src/hacking-instructor/challenges/forgedFeedback.ts","/src/frontend/src/hacking-instructor/challenges/loginAdmin.ts","/src/frontend/src/hacking-instructor/challenges/loginBender.ts","/src/frontend/src/hacking-instructor/challenges/loginJim.ts","/src/frontend/src/hacking-instructor/challenges/passwordStrength.ts","/src/frontend/src/hacking-instructor/challenges/privacyPolicy.ts","/src/frontend/src/hacking-instructor/challenges/reflectedXss.ts","/src/frontend/src/hacking-instructor/challenges/scoreBoard.ts","/src/frontend/src/hacking-instructor/challenges/viewBasket.ts","/src/frontend/src/hacking-instructor/helpers/helpers.ts","/src/frontend/src/hacking-instructor/index.ts","/src/frontend/src/hacking-instructor/tutorialUnavailable.ts","/src/frontend/src/index.html","/src/frontend/src/karma.conf.js","/src/frontend/src/main.ts","/src/frontend/src/polyfills.ts","/src/frontend/src/styles.scss","/src/frontend/src/test.ts","/src/frontend/src/theme.scss","/src/frontend/src/tsconfig.app.json","/src/frontend/src/tsconfig.spec.json","/src/frontend/tsconfig.base.json","/src/frontend/tsconfig.json","/src/frontend/webpack.angular.js","/src/ftp/acquisitions.md","/src/ftp/announcement_encrypted.md","/src/ftp/coupons_2013.md.bak","/src/ftp/eastere.gg","/src/ftp/encrypt.pyc","/src/ftp/incident-support.kdbx","/src/ftp/package.json.bak","/src/ftp/quarantine/juicy_malware_linux_amd_64.url","/src/ftp/quarantine/juicy_malware_linux_arm_64.url","/src/ftp/quarantine/juicy_malware_macos_64.url","/src/ftp/quarantine/juicy_malware_windows_64.exe.url","/src/ftp/suspicious_errors.yml","/src/i18n/.gitkeep","/src/lib/accuracy.ts","/src/lib/antiCheat.ts","/src/lib/botUtils.ts","/src/lib/challengeUtils.ts","/src/lib/codingChallenges.ts","/src/lib/config.types.ts","/src/lib/insecurity.ts","/src/lib/is-docker.ts","/src/lib/is-heroku.ts","/src/lib/is-windows.ts","/src/lib/logger.ts","/src/lib/noUpdate.ts","/src/lib/startup/cleanupFtpFolder.ts","/src/lib/startup/customizeApplication.ts","/src/lib/startup/customizeEasterEgg.ts","/src/lib/startup/registerWebsocketEvents.ts","/src/lib/startup/restoreOverwrittenFilesWithOriginals.ts","/src/lib/startup/validateChatBot.ts","/src/lib/startup/validateConfig.ts","/src/lib/startup/validateDependencies.ts","/src/lib/startup/validateDependenciesBasic.ts","/src/lib/startup/validatePreconditions.ts","/src/lib/utils.ts","/src/lib/webhook.ts","/src/models/address.ts","/src/models/basket.ts","/src/models/basketitem.ts","/src/models/captcha.ts","/src/models/card.ts","/src/models/challenge.ts","/src/models/complaint.ts","/src/models/delivery.ts","/src/models/feedback.ts","/src/models/imageCaptcha.ts","/src/models/index.ts","/src/models/memory.ts","/src/models/privacyRequests.ts","/src/models/product.ts","/src/models/quantity.ts","/src/models/recycle.ts","/src/models/relations.ts","/src/models/securityAnswer.ts","/src/models/securityQuestion.ts","/src/models/user.ts","/src/models/wallet.ts","/src/monitoring/grafana-dashboard.json","/src/package.json","/src/routes/2fa.ts","/src/routes/address.ts","/src/routes/angular.ts","/src/routes/appConfiguration.ts","/src/routes/appVersion.ts","/src/routes/authenticatedUsers.ts","/src/routes/b2bOrder.ts","/src/routes/basket.ts","/src/routes/basketItems.ts","/src/routes/captcha.ts","/src/routes/changePassword.ts","/src/routes/chatbot.ts","/src/routes/checkKeys.ts","/src/routes/continueCode.ts","/src/routes/countryMapping.ts","/src/routes/coupon.ts","/src/routes/createProductReviews.ts","/src/routes/currentUser.ts","/src/routes/dataErasure.ts","/src/routes/dataExport.ts","/src/routes/delivery.ts","/src/routes/deluxe.ts","/src/routes/easterEgg.ts","/src/routes/fileServer.ts","/src/routes/fileUpload.ts","/src/routes/imageCaptcha.ts","/src/routes/keyServer.ts","/src/routes/languages.ts","/src/routes/likeProductReviews.ts","/src/routes/logfileServer.ts","/src/routes/login.ts","/src/routes/memory.ts","/src/routes/metrics.ts","/src/routes/nftMint.ts","/src/routes/order.ts","/src/routes/orderHistory.ts","/src/routes/payment.ts","/src/routes/premiumReward.ts","/src/routes/privacyPolicyProof.ts","/src/routes/profileImageFileUpload.ts","/src/routes/profileImageUrlUpload.ts","/src/routes/quarantineServer.ts","/src/routes/recycles.ts","/src/routes/redirect.ts","/src/routes/repeatNotification.ts","/src/routes/resetPassword.ts","/src/routes/restoreProgress.ts","/src/routes/saveLoginIp.ts","/src/routes/search.ts","/src/routes/securityQuestion.ts","/src/routes/showProductReviews.ts","/src/routes/trackOrder.ts","/src/routes/updateProductReviews.ts","/src/routes/updateUserProfile.ts","/src/routes/userProfile.ts","/src/routes/verify.ts","/src/routes/videoHandler.ts","/src/routes/vulnCodeFixes.ts","/src/routes/vulnCodeSnippet.ts","/src/routes/wallet.ts","/src/routes/web3Wallet.ts","/src/rsn/cache.json","/src/rsn/rsn-update.ts","/src/rsn/rsn-verbose.ts","/src/rsn/rsn.ts","/src/rsn/rsnUtil.ts","/src/screenshots/git-stats.png","/src/screenshots/screenshot00.png","/src/screenshots/screenshot01.png","/src/screenshots/screenshot02.png","/src/screenshots/screenshot03.png","/src/screenshots/screenshot04.png","/src/screenshots/screenshot05.png","/src/screenshots/screenshot06.png","/src/screenshots/screenshot08.png","/src/screenshots/screenshot09.png","/src/screenshots/screenshot10.png","/src/screenshots/screenshot11.png","/src/screenshots/screenshot12.png","/src/screenshots/screenshot13.png","/src/server.ts","/src/swagger.yml","/src/threat-model.json","/src/tsconfig.json","/src/uploads/complaints/.gitkeep","/src/vagrant/Vagrantfile","/src/vagrant/bootstrap.sh","/src/vagrant/default.conf","/src/views/dataErasureForm.hbs","/src/views/dataErasureResult.hbs","/src/views/promotionVideo.pug","/src/views/themes/themes.js","/src/views/userProfile.pug"]},"skipped_rules":[]}